<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                Select "Logout" below if you are ready to end your current session.
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">
                    Cancel
                </button>
                <button name="logoutBtn" id="logoutBtn" class="btn btn-primary">
                    Logout
                </button>
            </div>
        </div>
    </div>
</div>

<script>

</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.2/socket.io.js"></script>

<!-- Bootstrap core JavaScript-->
<script src="vendor/jquery/jquery.min.js"></script>
<script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

<!-- Core plugin JavaScript-->
<script src="vendor/jquery-easing/jquery.easing.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.1/xlsx.full.min.js"></script>

<!-- Custom scripts for all pages-->
<script src="javascripts/sb-admin-2.min.js"></script>

<!-- PCreated by level plugins -->
<script src="/vendor/datatables/jquery.dataTables.min.js"></script>
<script src="/vendor/datatables/dataTables.bootstrap4.min.js"></script>

<!-- Icon-->
<script src="https://kit.fontawesome.com/91d5bebb50.js" crossorigin="anonymous"></script>

<!-- SWAL-->
<script src="/javascripts/sweetalert.min.js"></script>
<script src="/javascripts/toastr.min.js"></script>

<!-- DATE RANGE PICKER -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<!--CHART-->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    function successlogin(title, text) {
        return swal({
            title: title,
            text: text,
            icon: "success",
            buttons: {
                confirm: {
                    text: "OK",
                    value: true,
                    visible: true,
                    className: "swal-button-ok",
                }
            }
        }).then((result) => {
            return new Promise((resolve, reject) => {
                if (result === true) {
                    resolve();
                } else {
                    reject();
                }
            });
        });
    }

    function success(title, text) {
        toastr.success(text, title, {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        })
    }

    function warning(title, text) {
        toastr.warning(text, title, {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        });
    }

    function info(title, text) {
        toastr.info(text, title, {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        });
    }

    function errormsg(err) {
        toastr.error(err, "Error!", {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        });
    }
    
    function info(title, text) {
        toastr.info(text, title, {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        });
    }

    function errormsg(err) {
        toastr.error(err, "Error!", {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        });
    }

    $(document).on("click", "#logoutBtn", function () {
        $.ajax({
            type: "POST",
            url: "/login/logout",
            success: function (result) {
                success("Logout", "Successfully");
                location.replace("/");
            },
            error: function (err) {
                errormsg(err);
            },
        });
    });

    function formatCurrency(value) {
        if (!value) {
            return '₱0.00';
        }
        var formattedValue = parseFloat(value).toFixed(2);
        return '₱' + formattedValue.replace(/\d(?=(\d{3})+\.)/g, '$&,');
    }

    $(document).ready(function () {
        if ($('.collapse-item.active').length > 0) {
            $('.collapse-item.active').closest('.collapse').addClass('show');
        }

        $('.collapse-item').click(function () {
            $('.collapse-item').removeClass('active');
            $(this).addClass('active');
        });

        var path = window.location.pathname;

        $('.collapse-item').each(function () {
            var href = $(this).attr('href');
            if (path === href) {
                $(this).addClass('active');
                $(this).closest('.collapse').addClass('show');
            }
        });

        function adjustCollapse() {
            if ($(window).width() <= 767) {
                $('.collapse').removeClass('show');
                $('.row.d-flex.justify-content-center.align-items-center').removeClass('login-height');
            } else {
                $('.collapse-item.active').closest('.collapse').addClass('show');
            }
        }
        adjustCollapse();

        $(window).resize(function () {
            adjustCollapse();
        });

        $(document).on('click', function (event) {
            if ($(window).width() <= 767) {
                if (!$(event.target).closest('.collapse').length) {
                    $('.collapse').removeClass('show');
                }
            }

        });
    });

    $('.customdropdown').click(function () {
        $(this).attr('tabindex', 1).focus();
        $(this).toggleClass('active');
        $(this).find('.customdropdown-menu').slideToggle(300);
    });
    $('.customdropdown').focusout(function () {
        $(this).removeClass('active');
        $(this).find('.customdropdown-menu').slideUp(300);
    });
    $('.customdropdown .customdropdown-menu li').click(function () {
        $(this).parents('.customdropdown').find('span').text($(this).text());
        $(this).parents('.customdropdown').find('input').attr('value', $(this).attr('id'));
    });

    $(document).ready(function () {
        let isSidebarOpen = localStorage.getItem('isSidebarOpen') === 'true';

        function updateSidebarState() {
            $("body").toggleClass("sidebar-toggled", isSidebarOpen);
            $(".sidebar").toggleClass("toggled", isSidebarOpen);

            if (isSidebarOpen) {
                $('.sidebar .collapse').collapse('hide');
            }
        }

        updateSidebarState();

        $("#sidebarToggle, #sidebarToggleTop").on('click', function (e) {
            isSidebarOpen = !isSidebarOpen;

            localStorage.setItem('isSidebarOpen', isSidebarOpen);

            updateSidebarState();
        });
    });

    const toggleButton = document.getElementById("toggleButton");
    const toggleView = document.querySelector(".toggle-view");
    let isOpen = false; 
    if (toggleButton != null && toggleView != null){
        toggleButton.addEventListener("click", function() {
            if (!isOpen) {
                toggleView.style.display = "block";
                toggleView.style.height = toggleView.scrollHeight + "px"; 
                toggleButton.innerHTML = '<i class="fas fa-chevron-up"></i>';
            } else {
                toggleView.style.height = "0";
                setTimeout(() => {
                toggleView.style.display = "none";
                }, 500);
                toggleButton.innerHTML = '<i class="fas fa-chevron-right"></i>';
            }

            isOpen = !isOpen;
        });
    }

    const socket = io();
    let alertdiv = "";

    if('<%= accesstype%>' == "Owner" || '<%= accesstype%>' == "Manager"){
        socket.on('dataPulling', (data, data2) => {
            if(data.length == 0 && data2 == 0){
                $('#alert-messages').empty();
                const newItem = $(`
                <a class="dropdown-item d-flex align-items-center" href="#">
                    <div class="row justify-content-center"> No Notification </div>
                </a>
                `);

                $('#alert-messages').append(newItem);
            }else{
                $('#badgecount').text(0);
                let count = parseInt(data.length) + parseInt(data2.length)
                $('#badgecount').text(count);
                $('#alert-messages').empty();
                let production_message = " Requested a Production Approval for "
                let transfer_message = ' Requested a Production Transfer for '
                productionalert(data, production_message);
                transferalert(data2, transfer_message);
            }
        });
    }else if('<%= accesstype%>' == "User"){
        socket.on('userDataPull', (data, data2) => {
            if(data.length == 0 && data2 == 0){
                $('#alert-messages').empty();
                const newItem = $(`
                <a class="dropdown-item d-flex align-items-center" href="#">
                    <div class="row justify-content-center"> No Notification </div>
                </a>
                `);

                $('#alert-messages').append(newItem);
            }else{
                $('#badgecount').text(0);
                let count = parseInt(data.length) + parseInt(data2.length)
                $('#badgecount').text(count);
                $('#alert-messages').empty();
                let production_message = " Your Production Request was Approved! Product Name: "
                let transfer_message = "Your Transfer Request was Aprroved! Product Name: "
                productionalert(data, production_message);
                transferalert(data2, transfer_message);
            }
        });
    }

    function productionalert(data, message){
        data.forEach(item => {
            const newItem = $(`
            <a class="dropdown-item d-flex align-items-center" href="/production">
                <div class="mr-3">
                <div class="icon-circle bg-teal">
                    <i class="fas fa-file-alt"></i>
                </div>
                </div>
                <div>
                <div class="small text-gray-500">${item.startdate} - ${item.enddate}</div>
                <span class="font-weight-bold">${item.supervisorid} ${message} ${item.productid}!</span>
                </div>
            </a>
            `);

            $('#alert-messages').append(newItem);
        });
    }

    function transferalert(data2, message){
        data2.forEach(item => {
            const newItem = $(`
            <a class="dropdown-item d-flex align-items-center" href="/productiontransfer">
                <div class="mr-3">
                <div class="icon-circle bg-teal">
                    <i class="fas fa-file-alt"></i>
                </div>
                </div>
                <div>
                <div class="small text-gray-500">Branch ${item.branchid}</div>
                <span class="font-weight-bold">${message} ${item.productid}</span>
                </div>
            </a>
            `);

            $('#alert-messages').append(newItem);
        });
    }
    
    function formatPrice(event, input) {
    event.preventDefault();

    const cursorPosition = input.selectionStart;
    const originalValue = input.value;
    const defaultValue = '₱0.00';
    const currentValue = originalValue || defaultValue;

    let value = currentValue.replace(/[^0-9.]/g, '');
    let number = parseFloat(value);

    if (!isNaN(number)) {
        const formattedValue = number.toLocaleString('en-PH', {
            style: 'currency',
            currency: 'PHP',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });

        input.value = formattedValue;

        // Calculate the cursor position based on the formatted value
        let newPosition = cursorPosition + (formattedValue.indexOf('.') > currentValue.indexOf('.') ? 1 : 0);

        // Set the new cursor position
        input.setSelectionRange(newPosition, newPosition);
    } else {
        input.value = defaultValue;
    }
}

</script>