<script>
    $(document).ready(function () {
        //Functionality
        var activePositions = [];
        var activeAccess = [];
        var activeEmployees = [];

        let usercode = "";
        let status = "";
    
        LoadTable();
    
        $('#users-dataTable tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            console.log(dataRow);
            usercode = dataRow[0];
            status = dataRow[6];
        }) 
    
        $(document).on('click', '#addBtn', function () {
            let employeeid = $('#employeelist').val();
            let accessname = $('#accessname').val();
            let positionname = $('#positionname').val();
    
            var message = "";
    
            if (employeeid == '') { message += 'Employee ID, ' }
            if (accessname == '') { message += 'Fullname, ' }
            if (positionname == '') { message += 'Position Name, ' }
    
            if (message != '') {
                warning('Required', `Please fill up ${message}`);
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/users/save',
                    data: {
                        employeeid: employeeid,
                        accessname: accessname,
                        positionname: positionname,
                        username: employeeid,
                        password: employeeid,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable()
                            success('Saved', 'Successfully')
                            $('#employeeid').val('');
                            $('#accessname').val('');
                            $('#positionname').val('');
                        }
    
                        if (result.msg == 'exist') {
                            warning('Exist', `${employeeid} already exist!`);
                        }
    
                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        })

        function LoadTable() {
            $('#users-dataTable').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/users/load',
                    'dataSrc': (json) => {
                        var finalData = [];
                        var data = json.data;
    
                        console.log(data);
                        $.each(data, (key, item) => {
                            var action = '';
                            var status = item.status;
    
                            if (status == 'ACTIVE') {
                                action = '<button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button> <button id="inactiveBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="inactiveBtn">INACTIVE</button>'
                            }
                            if (status == 'INACTIVE') {
                                action = '<button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button> <button id="activeBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="activeBtn">ACTIVE</button>'
                            }
    
                            finalData.push({
                                usercode: item.usercode,
                                employeeid: item.employeeid,
                                accessname: item.accesstype,
                                positionname: item.positiontype,
                                username: item.username,
                                password: item.password,
                                status: item.status,
                                createdby: item.createdby,
                                createddate: item.createddate,
                                action: action,
                            })
    
                        })
    
                        return finalData;
                    },
                },
                'columnDefs': [{
                    targets: 1,
                    className: 'td-indent',
                }],
                'columns': [
                    { data: 'usercode' },
                    { data: 'employeeid' },
                    { data: 'accessname' },
                    { data: 'positionname' },
                    { data: 'username' },
                    { data: 'password' },
                    { data: 'createdby' },
                    { data: 'createddate' },
                    { data: 'status' },
                    { data: 'action' },
                ],
                'fixedHeader': true,
                initComplete: function () {
                    console.log('init complete');
                }
            });
        }
    
        function LoadList() {
            $.ajax({
                type: 'GET',
                url: '/position/load',
                success: function (result) {
                    var data = result.data;
    
                    $.each(data, function (key, item) {
                        if (item.status == "ACTIVE") {
                            activePositions.push(item.positionname); 
                        }
                    });
                    //console.log(activePositions);
                    populatePosition();
                },
                error: function (err) {
                    errormsg(err);
                }
            });

            $.ajax({
                type: 'GET',
                url: '/access/load',
                success: function (result) {
                    var data = result.data;
    
                    $.each(data, function (key, item) {
                        if (item.status == "ACTIVE") {
                            activeAccess.push(item.accessname); 
                        }
                    });
                    //console.log(activePositions);
                    populateCustomDropdown();
                },
                error: function (err) {
                    errormsg(err);
                }
            });

            $.ajax({
                type: 'GET',
                url: '/employees/load',
                success: function (result) {
                    var data = result.data;

                    $.each(data, function (key, item) {
                        if (item.status == "ACTIVE"){
                            var options = new Option(item.employeeid, item.employeeid);
                            $(options).html(item.employeeid);
                            $('#employeelist').append(options);
                        }
                    });

                },
                error: function (err) {
                    errormsg(err);
                }
            })
        }
    
        $(document).on('click', '#activeBtn', function(){
            console.log(usercode);
            console.log(status);
            $.ajax({
                type: 'POST',
                url: '/users/status',
                data: {
                    status: status,
                    usercode: usercode,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }
    
                    if (result.msg == 'notexist') {
                        warning(`${usercode} does not exist!`);
                    }
    
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });
    
        $(document).on('click', '#inactiveBtn', function(){
            console.log(usercode);
            console.log(status);
            $.ajax({
                type: 'POST',
                url: '/users/status',
                data: {
                    status: status,
                    usercode: usercode,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }
    
                    if (result.msg == 'notexist') {
                        warning(`${usercode} does not exist!`);
                    }
    
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });

        //Custom Dropdown
    
        function populateCustomDropdown() {
            for (const access of activeAccess) {
                addAccess("accessDropdown", access);
            }
        }

        function populatePosition(){
            for (const position of activePositions) {
                addPosition("positionDropdown", position);
            }
        }
    
        function setupCustomDropdown(inputId, dropdownId, optionClass) {
            const inputElement = document.getElementById(inputId);
            const dropdownElement = document.getElementById(dropdownId);
            const options = dropdownElement.getElementsByClassName(optionClass);
    
            inputElement.addEventListener("click", function () {
                dropdownElement.style.display = "block";
            });
    
            for (const option of options) {
                option.addEventListener("click", function () {
                    inputElement.value = option.textContent;
                    dropdownElement.style.display = "none";
                });
            }
    
            inputElement.addEventListener("input", function () {
                const value = inputElement.value.toUpperCase();
                for (const option of options) {
                    if (option.textContent.toUpperCase().includes(value)) {
                        option.style.display = "block";
                    } else {
                        option.style.display = "none";
                    }
                }
                dropdownElement.style.display = "block";
            });
            
            document.addEventListener("click", function (event) {
                const target = event.target;
                if (!dropdownElement.contains(target) && target !== inputElement) {
                    dropdownElement.style.display = "none";
                }
            });
        }
    
        function addPosition(dropdownId, optionText) {
            const dropdownElement = document.getElementById(dropdownId);
            const newOption = document.createElement("div");
            newOption.className = "dropdown-option";
            newOption.textContent = optionText;
    
            newOption.addEventListener("click", function () {
                const inputElement = document.getElementById("positionname");
                inputElement.value = optionText;
                dropdownElement.style.display = "none";
            });
            
            dropdownElement.appendChild(newOption);
        }

        function addAccess(dropdownId, optionText) {
            const dropdownElement = document.getElementById(dropdownId);
            const newOption = document.createElement("div");
            newOption.className = "dropdown-option";
            newOption.textContent = optionText;
    
            newOption.addEventListener("click", function () {
                const inputElement = document.getElementById("accessname");
                inputElement.value = optionText;
                dropdownElement.style.display = "none";
            });
            
            dropdownElement.appendChild(newOption);
        }
    
        LoadList()
    
        setupCustomDropdown("positionname", "positionDropdown", "dropdown-option");
        setupCustomDropdown("accessname", "accessDropdown", "dropdown-option");   
        }
    )
    </script>