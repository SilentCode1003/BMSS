<script>

    $(document).ready(function () {

        const loader = `  
            <tr id="loading-state">
                <td colspan="16"><div class="custom-loader"></div></td>
            </tr>`;

        const tbody = $('#productprice-dataTable tbody');
        for (let i = 0; i < 11; i++) {
            tbody.append(loader);
        }
        
        LoadTable();

        $(document).on("click", "#editBtn", function (e) {
            let productid = $(this).closest("tr").find(".product-id").text();
            let productname = $(this).closest("tr").find(".product-name").text();

            $("#productidModal").val(productid);
            $("#productnameModal").val(productname)
        });

        $(document).on('click', '#updateBtn', function () {
            let id = $('#productidModal').val();
            let price = $('#productPriceModal').val();

            var message = "";

            if (price == '') { message += 'Price ' }

            if (message != '') {
                warning('Required', `Please fill up ${message}`);
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/productprice/edit',
                    data: {
                        id: id,
                        price: price,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            success('Saved', 'Successfully')
                            window.location.reload();
                        }

                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        })

        $('#productprice-dataTable tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            // console.log(dataRow);
        })

        function populateProductPriceTable(data) {
            // console.log(data);
            const tableBody = $('#productprice-dataTable tbody');
            tableBody.empty();

            if (data.length === 0) {
                const tr = $('<tr>').append($('<td>', {
                    colspan: 14,
                    class: 'text-center',
                    text: 'No Data Matched'
                }));
                tableBody.append(tr);
            } else {
                data.forEach(item => {
                    let action = '';
                    if (item.status === 'ACTIVE') {
                        action = `
                        <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>`;
                    } else if (item.status === 'INACTIVE') {
                        action = `
                        <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span>`;
                    }
                    const statusBackground = getStatusBackground(item.status);
                    const containerBackground = getStatusContainerBackground(item.status);

                    const numericValue = parseFloat(item.price.replace(/₱|,/g, ''));
                    const numericPreviousPrice = parseFloat(item.previousprice.replace(/₱|,/g, ''));
                    const numericPriceChange = parseFloat(item.pricechange.replace(/₱|,/g, ''));

                    const tr = $('<tr>').append(
                        $('<td>', { text: item.productpriceid, 'data-label': 'Product Price ID', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.productid, 'data-label': 'Product ID', class: 'custom-mobile-align product-id' }),
                        $('<td>', { text: item.description, 'data-label': 'Description', class: 'custom-mobile-align product-name' }),
                        $('<td>', { text: item.barcode, 'data-label': 'Barcode', class: 'custom-mobile-align' }),
                        $('<td>', {
                            html: item.productimage
                                ? `<img src="data:image/png;base64,${item.productimage}" alt="Product Image" class="product-image" style="max-width: 100px; max-height: 85px;"/>`
                                : 'No Image',
                            'data-label': 'Product Image',
                        }),
                        $('<td>', {
                            text: isNaN(numericValue) ? 'N/A' : formatCurrency(numericValue),
                            'data-label': 'Price',
                            class: 'custom-mobile-align price'
                        }),
                        $('<td>', { text: item.category, 'data-label': 'Category', class: 'custom-mobile-align' }),
                        $('<td>', {
                            text: isNaN(numericPreviousPrice) ? 'N/A' : formatCurrency(numericPreviousPrice),
                            'data-label': 'Previous Price',
                            class: 'custom-mobile-align'
                        }),
                        $('<td>', {
                            text: isNaN(numericPriceChange) ? 'N/A' : formatCurrency(numericPriceChange),
                            'data-label': 'Price Change',
                            class: 'custom-mobile-align'
                        }),
                        $('<td>', {
                            text: item.pricechangedate ? item.pricechangedate : 'N/A',
                            'data-label': 'Price Change Date',
                            class: 'custom-mobile-align'
                        }),
                        $('<td>', { text: item.createdby, 'data-label': 'Created By', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.createddate, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
                        $('<td>', { class: 'custom-mobile-align', 'data-label': 'Status' }).append(
                            $('<div>', { class: containerBackground }).append(
                            $('<span>', { text: item.status, class: statusBackground })
                            )
                        ),
                        $('<td>', { html: action, 'data-label': 'Action' })
                    );

                    tableBody.append(tr);
                });
            }
        }

        function LoadTable() {
            $(".progress").hide();
            $(".progress").slideDown();

            $.ajax({
                url: '/productprice/load',
                method: 'GET',
                dataType: 'json',
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                populateProductPriceTable(data.data);
                                const table = $('#productprice-dataTable').DataTable({
                                    info: false,
                                    searching: false,
                                    paging: false,
                                    scrollCollapse: false,
                                });

                                $('.custom-checkbox input[type="checkbox"]').each(function () {
                                    const index = $(this).closest('.dropdown-item').index();
                                    if (!$(this).is(':checked')) {
                                        table.column(index).visible(false);
                                    }
                                });

                                $('.custom-checkbox input[type="checkbox"]').change(function () {
                                    const index = $(this).closest('.dropdown-item').index();
                                    if ($(this).is(':checked')) {
                                        table.column(index).visible(true);
                                    } else {
                                        table.column(index).visible(false);
                                    }
                                });

                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function filterTableRows() {
            const searchQuery = $('#search-input').val().trim().toLowerCase();
            let foundMatches = false;

            $('#no-match-row').remove();

            $('#productprice-dataTable tbody tr').each(function () {
                const rowData = $(this).text().toLowerCase();
                if (rowData.includes(searchQuery)) {
                    $(this).show();
                    foundMatches = true;
                } else {
                    $(this).hide();
                }
            });

            if (!foundMatches) {
                const noMatchRow = $('<tr>').append(
                    $('<td>', {
                        colspan: 14,
                        class: 'text-center',
                        text: 'No Data Matched'
                    })
                );
                $('#productprice-dataTable tbody').append(noMatchRow);
                noMatchRow.attr('id', 'no-match-row');
            }
        }

        $('#search-input').on('input', filterTableRows);

        $('.dropdown-menu').on('click', function (e) {
            e.stopPropagation();
        });

        document.getElementById('export-button').addEventListener('click', function () {
            const table = document.getElementById('productprice-dataTable');
            const ws = XLSX.utils.table_to_sheet(table);

            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');

            XLSX.writeFile(wb, 'exported_data.xlsx');
        });

        buttonAni = document.querySelector('.ani-btn');

        buttonAni.addEventListener('click', e => buttonPress(e));

        function buttonPress(e) {
            const offset = buttonAni.getBoundingClientRect();
            const newX = e.clientX - offset.left;
            const newY = e.clientY - offset.top;
            const color = getComputedStyle(buttonAni).backgroundColor;
            let size = 0;
            let opacity = 0.25;

            function btnClick() {
                size += 3;
                opacity -= 0.004;
                buttonAni.style.background = `${color} radial-gradient(circle at ${newX}px ${newY}px, rgba(1, 8, 22, ${opacity}) ${size}%, transparent ${size + 2}%) no-repeat`;
                if (size <= 300) {
                    requestAnimationFrame(btnClick);
                } else {
                    buttonAni.style.background = '';
                }
            }

            btnClick();
        }
    })

    function saveCheckboxStates() {
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');
        checkboxes.forEach((checkbox) => {
            localStorage.setItem(checkbox.id, checkbox.checked);
        });
    }

    function loadCheckboxStates() {
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');
        checkboxes.forEach((checkbox) => {
            const savedState = localStorage.getItem(checkbox.id);
            if (savedState !== null) {
                checkbox.checked = savedState === "true";
            }
        });
    }

    window.addEventListener('load', loadCheckboxStates);

    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    checkboxes.forEach((checkbox) => {
        checkbox.addEventListener('change', saveCheckboxStates);
    });

</script>