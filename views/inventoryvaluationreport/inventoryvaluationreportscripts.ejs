<script>
  $(document).ready(function () {

    reloadTableData()
    LoadList()
    reportid = '';

    $('#valuation-datatable tbody').on('click', 'tr', function () {
        var dataRow = [];
        $(this).closest('tr').find('td').each(function () {
            dataRow.push($(this).text());
        });
        console.log(dataRow);
        reportid = dataRow[0];
    }) 

    $(document).on('change', '#categoryid', function() {
      let category = $(this).val();
      console.log("category changed to: "+ category)

      if(category != ''){
        $.ajax({
          type: 'POST',
          url: '/products/getproductbycategory',
          data: {
            category: category,
          },
          success: function (result) {
              var data = result.data;
              console.log(data.length)
              if(data.length != 0){
                const tableBody = $('#components-datatable tbody');
                tableBody.empty();
                console.log(data);
                $.each(data, function (index, item) {
                  var newRow = $("<tr>");
                  newRow.append($("<td>").attr('data-label', 'Product ID').addClass('custom-mobile-align productid').text(item.productid));
                  newRow.append($("<td>").attr('data-label', 'Branch ID').addClass('custom-mobile-align branchid').text(item.branchid));
                  newRow.append($("<td>").attr('data-label', 'Product Name').addClass('custom-mobile-align productname').text(item.productname));
                  newRow.append($("<td>").attr('data-label', 'Price').addClass('custom-mobile-align unitcost').text(item.price));
                  newRow.append($("<td>").attr('data-label', 'Category').addClass('custom-mobile-align category').text(item.category));
                  newRow.append($("<td>").attr('data-label', 'Current Stock').addClass('custom-mobile-align currentstock').text(item.currentstock));
                  newRow.append($("<td>").attr('data-label', 'Current Stock').addClass('custom-mobile-align totalvalue').text(parseFloat(item.price)*parseFloat(item.currentstock)));
                  $('#components-datatable tbody').append(newRow);
                });
              }else if(data.length == 0){
                const tableBody = $('#components-datatable tbody');
                tableBody.empty();
                const tr = $('<tr>').append($('<td>', {
                  colspan: 7,
                  class: 'text-center',
                  text: 'No Data Matched'
                }));
                tableBody.append(tr);
              }

          },
          error: function (err) {
              errormsg(err);
          }
      });   
      }
    });

    $(document).on('click', '#reportbycategory', function() {
      let valuationdata = converttojson();
      let notes = $('#notesbycategory').val();

      var message = "";

      if ($('#components-datatable tbody tr').length === 0) { message += 'Table cannot be empty! ' }
      if (notes == '') { message += 'Notes cannot be empty! ' }
      console.log(valuationdata)

      if (message != '') {
        warning('Required', `Please fill up ${message}`);
      }else{
        console.log(notes, valuationdata);
        $.ajax({
          type: 'POST',
          url: '/inventoryvaluationreport/save',
          data: {
              notes: notes,
              valuationdata: valuationdata,
          },
          success: function (result) {
              if (result.msg == 'success') {
                  reloadTableData()
                  const tableBody = $('#components-datatable tbody');
                  tableBody.empty();
                  $('#selectedcategory').val("Select Category");
                  success('Saved', 'Successfully')
              }

              if (result.msg == 'exist') {
                  warning('Exist', `${fullname} already exist!`);
              }

          },
          error: function (err) {
              errormsg(err);
          }
        })
      }
    });

    function converttojson(){
      let jsonData = [];
      $('#components-datatable tbody tr').each(function () {
          var row = $(this);
          var productid = row.find('.productid').text();
          var quantity = row.find('.currentstock').text();
          var unitcost = row.find('.unitcost').text();
          var totalvalue = row.find('.totalvalue').text();
          var branchid = row.find('.branchid').text();
          var category = row.find('.category').text();
          var productname = row.find('.productname').text();

          jsonData.push({
              productid: productid,
              quantity: quantity,
              unitcost: unitcost,
              totalvalue: totalvalue,
              branchid: branchid,
              category: category,
              productname: productname
          })
      });
      return JSON.stringify(jsonData);
    }

    function populatedatatable(data) {
      console.log(data);
      const tableBody = $('#valuation-datatable tbody');
      tableBody.empty();

      if (data.length === 0) {
        const tr = $('<tr>').append($('<td>', {
          colspan: 5,
          class: 'text-center',
          text: 'No Data Matched'
        }));
        tableBody.append(tr);
      } else {
        data.forEach(item => {
          const tr = $('<tr>').append(
            $('<td>', { text: item.reportid, 'data-label': 'Inventory ID', class: 'custom-mobile-align bmss-link', 'data-toggle': 'modal', 'data-target': '#valuationitems'  }),
            $('<td>', { text: item.reportdate, 'data-label': 'Product', class: 'custom-mobile-align' }),
            $('<td>', { text: item.generatedby, 'data-label': 'Branch ID', class: 'custom-mobile-align' }),
            $('<td>', { text: item.notes, 'data-label': 'Quantity', class: 'custom-mobile-align' }),
          );
          tableBody.append(tr);
        });
      }
    }

    function reloadTableData() {
      $(".progress").hide();
      $(".progress").slideDown();

      $.ajax({
        url: '/inventoryvaluationreport/load',
        method: 'GET',
        dataType: 'json',
        xhrFields: {
          onprogress: function (e) {
            if (e.lengthComputable) {
              var percentComplete = (e.loaded / e.total) * 100;
              $(".progress-bar").css("width", percentComplete + "%");
            }
          }
        },
        success: function (data) {
          console.log(data)
          setTimeout(function () {
            $(".progress").slideUp(function () {
              if (data.msg === 'success') {
                populatedatatable(data.data);
              } else {
                console.error(data.msg);
              }
            })
          }, 1000);
        },
        error: function (error) {
          console.error(error);
        }
      });
    }

    function LoadList() {
      $.ajax({
        type: 'GET',
        url: '/category/load',
        success: function (result) {
          var data = result.data;
          // console.log(data)
          $.each(data, function (key, item) {
            let productid = item.productid;
            var listItem = $('<li></li>')
            .text(item.categoryname)
            .data('categoryid', item.categoryname);

            $('.categorylist').append(listItem);
          });
        },
        error: function (err) {
          errormsg(err);
        }
      });
    }
    $('.categorylist').on('click', 'li', function () {
        var selectedOption = $(this).text();
        var selectedCategoryId = $(this).data('categoryid');

        $('#selectedcategory').text(selectedOption);
        $('#categoryid').val(selectedCategoryId).change();
    });

    $(document).on('click', '.bmss-link', function(){
      console.log(reportid);
      $.ajax({
          type: 'POST',
          url: '/inventoryvaluationreport/getvaluationitems',
          data: {
              reportid: reportid,
          },
          success: function (result) {
              let data = result.data;
              let totalCost = 0;

              $('#valuationitems-dataTable tbody').empty();
              console.log(data)

              $.each(data, function (key, item) {
                var newRow = $("<tr>");
                newRow.append($("<td>").attr('data-label', 'Details ID').addClass('custom-mobile-align').text(item.branchid));
                newRow.append($("<td>").attr('data-label', 'Date').addClass('custom-mobile-align').text(item.productid));
                newRow.append($("<td>").attr('data-label', 'Item Name').addClass('custom-mobile-align').text(item.productname));
                newRow.append($("<td>").attr('data-label', 'Price').addClass('custom-mobile-align').text(item.quantity));
                newRow.append($("<td>").attr('data-label', 'Quantity').addClass('custom-mobile-align').text(item.category));
                newRow.append($("<td>").attr('data-label', 'Total').addClass('custom-mobile-align').text(formatCurrency(item.unitcost)));
                newRow.append($("<td>").attr('data-label', 'Total').addClass('custom-mobile-align').text(formatCurrency(item.totalvalue)));
                $('#valuationitems-dataTable tbody').append(newRow);
                totalCost += parseFloat(item.totalvalue);
              });

              $('#total-cost').text(formatCurrency(totalCost));
          },
          error: function (err) {
              errormsg(err);
          }
      });
    });

  });
</script>