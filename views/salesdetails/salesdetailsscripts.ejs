<script>
    document.addEventListener('DOMContentLoaded', () => {
        data = [];
        detailid = '';

        populateTable(data);
        const currentDate = getCurrentDate();
        const tomorrowDate = getTomorrowDate();
        $(".progress").hide();
        $(".progress").slideDown();

        $('#salesdetail-dataTable tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            console.log(dataRow);
            detailid = dataRow[0];
        }) 

        $(document).on('click', '.bmss-link', function(){
            console.log(detailid);
            $.ajax({
                type: 'POST',
                url: '/salesdetails/getdetails',
                data: {
                    detailid: detailid,
                },
                success: function (result) {
                    var data = result.data;

                    $('#category-dataTable tbody').empty();

                    $.each(data, function (key, item) {
                        var detailsId = item.ornumber;
                        var date = item.ordate;
                        var items = JSON.parse(item.ordescription);

                        $.each(items, function (index, itemData) {
                            var itemName = itemData.name;
                            var price = itemData.price;
                            var quantity = itemData.quantity;
                            var total = price * quantity;

                            var newRow = $("<tr>");

                            newRow.append($("<td>").attr('data-label', 'Details ID').addClass('custom-mobile-align').text(detailsId));
                            newRow.append($("<td>").attr('data-label', 'Date').addClass('custom-mobile-align').text(date));
                            newRow.append($("<td>").attr('data-label', 'Item Name').addClass('custom-mobile-align').text(itemName));
                            newRow.append($("<td>").attr('data-label', 'Price').addClass('custom-mobile-align').text(formatCurrency(price)));
                            newRow.append($("<td>").attr('data-label', 'Quantity').addClass('custom-mobile-align').text(quantity));
                            newRow.append($("<td>").attr('data-label', 'Total').addClass('custom-mobile-align').text(formatCurrency(total)));

                            $('#category-dataTable tbody').append(newRow);
                        });
                    });
                },
                error: function (err) {
                    errormsg(err);
                }
            });
        });

        function formatCurrency(amount) {
            var formattedAmount = amount.toFixed(2);
            return '₱' + formattedAmount;
        }

        function getCurrentDate() {
            const today = new Date();
            const year = today.getFullYear();
            const month = String(today.getMonth() + 1).padStart(2, '0');
            const day = String(today.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        function getTomorrowDate() {
            const tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            const year = tomorrow.getFullYear();
            const month = String(tomorrow.getMonth() + 1).padStart(2, '0');
            const day = String(tomorrow.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        function populateTable(data) {
            console.log(data);
            const tableBody = document.querySelector('#salesdetail-dataTable tbody');
            tableBody.innerHTML = '';

            if (data.length === 0) {
                const tr = document.createElement('tr');
                tr.innerHTML = '<td colspan="8" class="text-center">No Data Matched</td>';
                tableBody.appendChild(tr);
            } else {
                data.forEach(item => {
                    const descriptionArray = JSON.parse(item.description);
                    const newDescription = descriptionArray
                        .map(item => `Name: ${item.name}, Quantity: ${item.quantity}, Price: ₱${item.price}`)
                        .join('<br>');
 
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td class="custom-mobile-align bmss-link" data-toggle="modal" data-target="#sales-details-modal" data-label="Detail ID">${item.detailid}</td>
                        <td class="custom-mobile-align" data-label="Date">${item.date}</td>
                        <td class="custom-mobile-align" data-label="POS ID">${item.posid}</td>
                        <td class="custom-mobile-align" data-label="Shift">${item.shift}</td>
                        <td class="custom-mobile-align" data-label="Payment Type">${item.paymenttype}</td>
                        <td class="responsive-wrap">${newDescription}</td>
                        <td class="custom-mobile-align" data-label="Total">₱ ${item.total}</td>
                        <td class="custom-mobile-align" data-label="Cashier">${item.cashier}</td>
                    `;
                    tableBody.appendChild(tr);
                });
            }
        }

        $.ajax({
            url: '/salesdetails/load',
            method: 'POST',
            dataType: 'json',
            data: {
                dateRange: `${currentDate} to ${tomorrowDate}`
            },
            xhrFields: {
                onprogress: function (e) {
                    if (e.lengthComputable) {
                        var percentComplete = (e.loaded / e.total) * 100;
                        $(".progress-bar").css("width", percentComplete + "%");
                    }
                }
            },
            success: function (data) {
                setTimeout(function () {
                    $(".progress").slideUp(function () {
                        if (data.msg === 'success') {
                            populateTable(data.data);
                        } else {
                            console.error(data.msg);
                        }
                    });
                }, 1000); 
            },
            error: function (error) {
                console.error(error);
            }
        });
        
        $(document).on('click', '#addBtn', function () {
            const shiftValue = $('#shift').val();
            const dateRangeValue = $('#dateRange').val();
            const posidValue = $('#posid').val();

            $(".progress").slideDown();

            $.ajax({
                url: '/salesdetails/load',
                method: 'POST',
                dataType: 'json',
                data: {
                    shift: shiftValue,
                    dateRange: dateRangeValue,
                    posid: posidValue
                },
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                $('#shift').val('');
                                $('#dateRange').val('');
                                $('#posid').val('');
                                populateTable(data.data);
                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000); 
                },
                error: function (error) {
                    console.error(error);
                }
            });

        });

        $('#dateRange').daterangepicker({
            opens: 'left',
            locale: {
                format: 'YYYY-MM-DD',
                separator: ' to '
            }
        });
        $('#dateRange').val('');

        function filterTableRows() {
            const searchQuery = $('#search-input').val().trim().toLowerCase();
            let foundMatches = false;

            $('#no-match-row').remove();

            $('#salesdetail-dataTable tbody tr').each(function() {
                const rowData = $(this).text().toLowerCase();
                if (rowData.includes(searchQuery)) {
                    $(this).show();
                    foundMatches = true;
                } else {
                    $(this).hide();
                }
            });

            if (!foundMatches) {
                const noMatchRow = $('<tr>').append(
                    $('<td>', {
                        colspan: 9,
                        class: 'text-center',
                        text: 'No Data Matched'
                    })
                );
                $('#salesdetail-dataTable tbody').append(noMatchRow);
                noMatchRow.attr('id', 'no-match-row');
            }
        }

        $('#search-input').on('input', filterTableRows);
    });
</script>
