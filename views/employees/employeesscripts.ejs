<script>
$(document).ready(function () {
    //Functionality
    var activePositions = [];
    let employeeid = "";
    let status = "";

    LoadTable();

    $('#employees-dataTable tbody').on('click', 'tr', function () {
        var dataRow = [];
        $(this).closest('tr').find('td').each(function () {
            dataRow.push($(this).text());
        });
        console.log(dataRow);
        employeeid = dataRow[0];
        status = dataRow[7]
    }) 

    $(document).on('click', '#editBtn', function(){
        $('#employeeidmodal').val(employeeid);
        $('#employeesModal').modal('show');
    })

    $(document).on('click', '#closeBtn', function(){
        $('#positionlist').val('');
        $('#contactinfomodal').val('');
    })

    $(document).on('click', '#addBtn', function () {
        let employeeid = $('#employeeid').val();
        let fullname = $('#fullname').val();
        let positionname = $('#positionname').val();
        let contactinfo = $('#contactinfo').val();
        let datehired = $('#datehired').val();

        var message = "";

        if (employeeid == '') { message += 'Employee ID, ' }
        if (fullname == '') { message += 'Fullname, ' }
        if (positionname == '') { message += 'Position Name, ' }
        if (contactinfo == '') { message += 'Contact Info, ' }
        if (datehired == '') { message += 'Date Hired, ' }

        if (message != '') {
            warning('Required', `Please fill up ${message}`);
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/employees/save',
                data: {
                    employeeid: employeeid,
                    fullname: fullname,
                    positionname: positionname,
                    contactinfo: contactinfo,
                    datehired: datehired
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable()
                        success('Saved', 'Successfully')
                        $('#employeeid').val('');
                        $('#fullname').val('');
                        $('#positionname').val('');
                        $('#contactinfo').val('');
                        $('#datehired').val('');
                    }

                    if (result.msg == 'exist') {
                        warning('Exist', `${employeeid} already exist!`);
                    }

                },
                error: function (err) {
                    errormsg(err);
                }
            })
        }
    })

    function populateEmployeesTable(data) {
        console.log(data);
        const tableBody = $('#employees-dataTable tbody');
        tableBody.empty();

        if (data.length === 0) {
            const tr = $('<tr>').append($('<td>', {
                colspan: 9,
                class: 'text-center',
                text: 'No Data Matched'
            }));
            tableBody.append(tr);
        } else {
            data.forEach(item => {
                let action = '';
                if (item.status === 'ACTIVE') {
                    action = `<button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                    <button id="inactiveBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="inactiveBtn">INACTIVE</button>
                    <button id="deleteBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="inactiveBtn">DELETE</button>`;
                } else if (item.status === 'INACTIVE') {
                    action = `<button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                    <button id="activeBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="activeBtn">ACTIVE</button>
                    <button id="deleteBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="inactiveBtn">DELETE</button>`;
                }

                const tr = $('<tr>').append(
                    $('<td>', { text: item.employeeid, 'data-label': 'Employee ID', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.fullname, 'data-label': 'Full Name', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.position, 'data-label': 'Position', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.contactinfo, 'data-label': 'Contact Info', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.datehired, 'data-label': 'Date Hired', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.createdby, 'data-label': 'Created By', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.createddate, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.status, 'data-label': 'Status', class: 'custom-mobile-align' }),
                    $('<td>', { html: action, 'data-label': 'Action', class: '' })
                );

                tableBody.append(tr);
            });
        }
    }
    
    function LoadTable() {
        $.ajax({
            url: '/employees/load',
            method: 'GET',
            dataType: 'json',
            success: function(data) {
                if (data.msg === 'success') {
                    populateEmployeesTable(data.data);
                } else {
                    console.error(data.msg);
                }
            },
            error: function(error) {
                console.error(error);
            }
        });

    }

    function LoadList() {
        $.ajax({
            type: 'GET',
            url: '/position/load',
            success: function (result) {
                var data = result.data;

                $.each(data, function (key, item) {
                    if (item.status == "ACTIVE") {
                        activePositions.push(item.positionname); 
                        var options = new Option(item.positionname, item.positionname);
                        $(options).html(item.positionname);
                        $('#positionlist').append(options);
                    }
                });
                //console.log(activePositions);
                populateCustomDropdown();
            },
            error: function (err) {
                errormsg(err);
            }
        });
    }

    $(document).on('click', '#activeBtn', function(){
        console.log(employeeid);
        console.log(status);
        $.ajax({
            type: 'POST',
            url: '/employees/status',
            data: {
                status: status,
                employeeid: employeeid,
            },
            success: function (result) {
                if (result.msg == 'success') {
                    LoadTable();
                    success('Saved', 'Successfully')
                }

                if (result.msg == 'notexist') {
                    warning(`${employeeid} does not exist!`);
                }

            },
            error: function (err) {
                errormsg(err);
            }
        })
    });

    $(document).on('click', '#inactiveBtn', function(){
        console.log(employeeid);
        console.log(status);
        $.ajax({
            type: 'POST',
            url: '/employees/status',
            data: {
                status: status,
                employeeid: employeeid,
            },
            success: function (result) {
                if (result.msg == 'success') {
                    LoadTable();
                    success('Saved', 'Successfully')
                }

                if (result.msg == 'notexist') {
                    warning(`${employeeid} does not exist!`);
                }

            },
            error: function (err) {
                errormsg(err);
            }
        })
    });

    $(document).on('click', '#deleteBtn', function(){
        console.log(employeeid);
        $.ajax({
            type: 'POST',
            url: '/employees/delete',
            data: {
                employeeid: employeeid,
            },
            success: function (result) {
                if (result.msg == 'success') {
                    warning('Delete', 'Successfully')
                }

                if (result.msg == 'notexist') {
                    warning(`${employeeid} does not exist!`);
                }

            },
            error: function (err) {
                errormsg(err);
            }
        })
    });

    $(document).on('click', '#updateBtn', function () {
        let employeeid = $('#employeeidmodal').val();
        let positionname = $('#positionlist').val();
        let contactinfo = $('#contactinfomodal').val();

        var message = "";

        if (positionname == '' && contactinfo == ''){
                message += 'Fill up atleast 1 input field before updating'
            }

        if (message != '') {
            warning('Required', `${message}`);
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/employees/edit',
                data: {
                    employeeid: employeeid,
                    positionname: positionname,
                    contactinfo: contactinfo,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        $('#employeesModal').modal('hide');
                        $('#positionlist').val('');
                        $('#contactinfomodal').val('');
                        success('Saved', 'Successfully')
                    }

                    if (result.msg == 'exist') {
                        warning('Exist', `${positionname} already exist!`);
                    }

                },
                error: function (err) {
                    errormsg(err);
                }
            })
        }
    })

    //Custom Dropdown

    function populateCustomDropdown() {
        for (const position of activePositions) {
            addOption("positionDropdown", position);
        }
    }

    function setupCustomDropdown(inputId, dropdownId, optionClass) {
        const inputElement = document.getElementById(inputId);
        const dropdownElement = document.getElementById(dropdownId);
        const options = dropdownElement.getElementsByClassName(optionClass);

        inputElement.addEventListener("click", function () {
            dropdownElement.style.display = "block";
        });

        for (const option of options) {
            option.addEventListener("click", function () {
                inputElement.value = option.textContent;
                dropdownElement.style.display = "none";
            });
        }

        inputElement.addEventListener("input", function () {
            const value = inputElement.value.toUpperCase();
            for (const option of options) {
                if (option.textContent.toUpperCase().includes(value)) {
                    option.style.display = "block";
                } else {
                    option.style.display = "none";
                }
            }
            dropdownElement.style.display = "block";
        });

        document.addEventListener("click", function (event) {
                const target = event.target;
                if (!dropdownElement.contains(target) && target !== inputElement) {
                    dropdownElement.style.display = "none";
                }
            });
    }

    function addOption(dropdownId, optionText) {
        const dropdownElement = document.getElementById(dropdownId);
        const newOption = document.createElement("div");
        newOption.className = "dropdown-option";
        newOption.textContent = optionText;

        newOption.addEventListener("click", function () {
            const inputElement = document.getElementById("positionname");
            inputElement.value = optionText;
            dropdownElement.style.display = "none";
        });
        
        dropdownElement.appendChild(newOption);
    }

    LoadList()

    setupCustomDropdown("positionname", "positionDropdown", "dropdown-option");
        
    }
)
</script>