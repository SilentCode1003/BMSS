<script>
    $(document).ready(function () {
        //Functionality
        let countid = "";
        let status = "";
        let componentsmaterialid = "";
        let dropdownCounter = 0;
        LoadTable();
        LoadList();

        $('#materialcount-dataTable tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            console.log(dataRow);
            countid = dataRow[0];
            status = dataRow[6]
        })

        $('#components-dataTable tbody').on('click', 'tr', function () {
            var componentsRow = [];
            $(this).closest('tr').find('td').each(function () {
                componentsRow.push($(this).text());
            });
            console.log(componentsRow);
            componentsmaterialid = componentsRow[1];
            console.log(componentsmaterialid)
        })

        $(document).on('click', '#submitBtn', function () {
            var components = productsTableToJson();
            var productid = $('#productid').val();
            var hasZeroQuantity = false;
            
            let message = "";
            
            console.log(components);
            console.log(productid);
            
            $('#components-dataTable tbody tr').each(function() {
                var quantity = $(this).find('input[name="quantity"]').val();
                if (quantity == 0) {
                    hasZeroQuantity = true;
                    return false;
                }
            });
            if (hasZeroQuantity) {
                message += 'Quantity Cannot be 0, ';
            }

            if (productid == '') { message += 'Product, '; }
            if (message != '') {
                warning('Required', `Please fill up ${message}`);
            }else{
                $.ajax({
                    type: 'POST',
                    url: '/productioncomponents/save',
                    data: {
                        productid: productid,
                        components: components
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            success('Saved', 'Successfully')
                        }
    
                        if (result.msg == 'exist') {
                            warning('Exist', `${productid} already exist!`);
                        }
    
                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        })
        
        function computeinitialcost(price){
            $('#quantity').on('keyup', function() {
                let quantity = $(this).val();
                if(quantity === '') {
                    quantity = '0.00';
                }
                let totalCost = parseFloat(price) * parseFloat(quantity);
                $('#totalcost').text(totalCost.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
            });
        }

        $(document).on('change', '#materiallists', function() {
            dropdownCounter++
            let materialid = $(this).val();
            
            AddNewRow(dropdownCounter);
            console.log('Material ID changed to: ' + materialid);
            let row = $(this).closest('tr');

            let newAction = '<button class="btn btn-outline-danger delete-row">Remove</button>'

            if (materialid != ''){
                row.find('#actionBtn').html(newAction);
            }else{
                row.find('#actionBtn').html('');
            }
            

            $(this).prop('disabled', true);
            
            $.ajax({
                type: 'POST',
                url: '/productionmaterials/getmaterials', 
                data: {
                    materialid: materialid,
                },
                success: function (result) {
                    console.log(result.data)
                    let data = result.data;
                    $.each(data, function (index, item) {
                        computeinitialcost(item.price);
                        row.find('.material-id').text(item.productid);
                        row.find('.unit').text(item.unit);
                    });
                },
                error: function (err) {
                    errormsg(err);
                }
            });
        });

        function computecost(price, row) {
            row.find('.quantity').on('keyup', function() {
                let quantity = $(this).val();
                if (quantity === '') {
                    quantity = '0.00';
                }
                let totalCost = parseFloat(price) * parseFloat(quantity);
                row.find('.totalcost').text(totalCost.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
            });
        }

        function AddNewRow(dropdownCounter) {
            dropdownCounter++

            $('#components-dataTable').append(newRow);
            let row = $('#components-dataTable').find('tr').last();
            let newActionBtn = '<button class="btn btn-outline-danger delete-row">Remove</button>';
            let newrow = '<select class="form-control text-center" name="materiallists" id="materiallists' + dropdownCounter + '"><option value="">Select Material</option></select>';
            var newRow =
                '<tr>' +
                '<td data-label="Material Name" class="custom-mobile-align">' + newrow + '</td>' +
                '<td data-label="Material ID" class="custom-mobile-align material-id'+dropdownCounter+'"></td>' +
                '<td data-label="Quantity" class="custom-mobile-align">' + '<div class="row justify-content-center">' + '<input name="quantity" type="number" class="form-control w-50 quantity" placeholder="0.00" value="" maxlength="8">' + '</div></td>' +
                '<td data-label="Cost" class="custom-mobile-align">' + '<span>â‚±</span>' + '<span class="totalcost">0.00</span></td>' +
                '<td data-label="Unit" class="custom-mobile-align unit'+dropdownCounter+'"></td>' +
                '<td data-label="Action" class="custom-mobile-align delete-row"></td>' +
                '</tr>';
            $('#components-dataTable').append(newRow);

            $(document).on('change', '#materiallists' + dropdownCounter, function () {
                let newmaterialid = $(this).val();
                console.log(newmaterialid);
                let existingValues = [];

                let currentRow = $(this).closest('tr');
                let actionButton = currentRow.find('.delete-row');

                if (newmaterialid !== '') {
                    actionButton.html(newActionBtn);
                } else {
                    actionButton.html('');
                }
                $('#components-dataTable select[name="materiallists"]').each(function () {
                    let selectedValue = $(this).val();
                    if (selectedValue !== null && selectedValue !== "") {
                        existingValues.push(selectedValue);
                    }
                });

                let isDuplicate = existingValues.filter(value => value === newmaterialid).length > 1;

                if (isDuplicate) {
                    swal({
                        title: "Duplicate Selection",
                        text: "You have already selected this material. Please choose a different one.",
                        icon: "error",
                        buttons: "OK",
                    });
                    $(this).val('');
                } else {
                    $.ajax({
                        type: 'POST',
                        url: '/productionmaterials/getmaterials',
                        data: {
                            materialid: newmaterialid,
                        },
                        success: function (result) {
                            console.log(result.data)
                            let data = result.data;
                            $.each(data, function (index, item) {
                                computecost(item.price, currentRow); 
                                currentRow.find('.material-id' + dropdownCounter).text(item.productid);
                                currentRow.find('.unit' + dropdownCounter).text(item.unit);
                            });
                        },
                        error: function (err) {
                            errormsg(err);
                        }
                    });
                    AddNewRow(dropdownCounter);
                    $(this).prop('disabled', true);
                }
               
            });

            $.ajax({
                type: 'GET',
                url: '/productionmaterials/load',
                success: function (result) {
                    var data = result.data;
                    $.each(data, function (key, item) {
                        if (item.status == "ACTIVE") {
                            var options = new Option(item.productname, item.productid);
                            $('#materiallists' + dropdownCounter).append(options);
                        }
                    });
                },
                error: function (err) {
                    errormsg(err);
                }
            });
        }

        function populateMaterialCountTable(data) {
            const tableBody = $('#materialcount-dataTable tbody');
            tableBody.empty();

            if (data.length === 0) {
                const tr = $('<tr>').append($('<td>', {
                    colspan: 9,
                    class: 'text-center',
                    text: 'No Data Matched'
                }));
                tableBody.append(tr);
            } else {
                data.forEach(item => {
                    let action = '';
                    if (item.status === 'ACTIVE') {
                        action = `<button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                        <button id="inactiveBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="inactiveBtn">INACTIVE</button>`;
                    } else if (item.status === 'INACTIVE') {
                        action = `<button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                        <button id="activeBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="activeBtn">ACTIVE</button>`;
                    }

                    const tr = $('<tr>').append(
                        $('<td>', { text: item.countid, 'data-label': 'Employee ID', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.productid, 'data-label': 'Full Name', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.quantity, 'data-label': 'Position', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.unit, 'data-label': 'Contact Info', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.createdby, 'data-label': 'Created By', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.createddate, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.status, 'data-label': 'Status', class: 'custom-mobile-align' }),
                        $('<td>', { html: action, 'data-label': 'Action', class: '' })
                    );

                    tableBody.append(tr);
                });
            }
        }

        function LoadTable() {
            $(".progress").hide();
            $(".progress").slideDown();

            $.ajax({
                url: '/materialcount/load',
                method: 'GET',
                dataType: 'json',
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                console.log(data.data);
                                populateMaterialCountTable(data.data);
                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        
        $(document).on('click', '.delete-row', function () {
            $(this).closest('tr').remove();
            
        });

        function productsTableToJson() {
            var jsonData = [];

            $('#components-dataTable tbody tr').each(function () {
                var row = $(this);
                var materialid = row.find('td:eq(0)').text();
                var materialname = row.find('td:eq(1)').text();
                var quantity = $('#quantity' + materialid).val();
                var cost = $('#totalcost' + materialid).text();
                var unit = row.find('td:eq(4)').text();

                // var rowData = {
                //     materialname: materialname,
                //     quantity: quantity,
                //     cost: cost,
                //     unit: unit
                // };

                jsonData.push({
                    materialname: materialname,
                    quantity: quantity,
                    cost: cost,
                    unit: unit
                });
            });

            return JSON.stringify(jsonData);
        }

        //#endregion

        function LoadList() {
            $.ajax({
                type: 'GET',
                url: '/products/load',
                success: function (result) {
                    var data = result.data;
                    console.log(data)
                   
                    $.each(data, function (key, item) {
                        if (item.status == "ACTIVE") {
                            var listItem = $('<li></li>')
                            .text(item.description)
                            .data('productid', item.productid);

                            $('.productlist').append(listItem);
                        }
                    });
                    $('.productlist li').click(function () {
                        var selectedOption = $(this).text();
                        var selectedProductId = $(this).data('productid');

                        $('#selectedproduct').text(selectedOption);
                        $('#productid').val(selectedProductId);
                    });

                },
                error: function (err) {
                    errormsg(err);
                }
            });

            $.ajax({
                type: 'GET',
                url: '/productionmaterials/load',
                success: function (result) {
                    var data = result.data;
                    console.log(data)
                    $.each(data, function (key, item) {
                        if (item.status == "ACTIVE") {
                            var options = new Option(item.productname, item.productid);
                            $('#materiallists').append(options);
                        }
                    });

                },
                error: function (err) {
                    errormsg(err);
                }
            });
        }

        $(document).on('click', '#activeBtn', function(){
            console.log(countid);
            console.log(status);
            $.ajax({
                type: 'POST',
                url: '/materialcount/status',
                data: {
                    status: status,
                    countid: countid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }

                    if (result.msg == 'notexist') {
                        warning(`${countid} does not exist!`);
                    }

                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });

        function filterTableRows() {
            const searchQuery = $('#search-input').val().trim().toLowerCase();
            let foundMatches = false;

            $('#no-match-row').remove();

            $('#purchaseorder-dataTable tbody tr').each(function() {
                const rowData = $(this).text().toLowerCase();
                if (rowData.includes(searchQuery)) {
                    $(this).show();
                    foundMatches = true;
                } else {
                    $(this).hide();
                }
            });

            if (!foundMatches) {
                const noMatchRow = $('<tr>').append(
                    $('<td>', {
                        colspan: 9,
                        class: 'text-center',
                        text: 'No Data Matched'
                    })
                );
                $('#purchaseorder-dataTable tbody').append(noMatchRow);
                noMatchRow.attr('id', 'no-match-row');
            }
        }

        $('#search-input').on('input', filterTableRows);

        const toggleButton = document.getElementById("toggleButton");
        const toggleView = document.querySelector(".toggle-view");

        let isOpen = false;

        toggleButton.addEventListener("click", function() {
            if (!isOpen) {
                toggleView.style.display = "block";
                toggleView.style.height = toggleView.scrollHeight + "px";
                toggleButton.innerHTML = '<i class="fas fa-chevron-up"></i>';
            } else {
                toggleView.style.height = "0";
                setTimeout(() => {
                toggleView.style.display = "none";
                }, 500);
                toggleButton.innerHTML = '<i class="fas fa-chevron-right"></i>';
            }

            isOpen = !isOpen;
        });


    })
</script>