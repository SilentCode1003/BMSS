<script>
    $(document).ready(function () {
        //Functionality
        var selectedProduct = [];
        let counter = 0;
        let orderid = "";
        let status = "";
        LoadTable();

        $('#datatable tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            console.log(dataRow);
            orderid = dataRow[0];
            status = dataRow[7];
        }) 

        $(document).on('click', '.bmss-link', function(){
            $.ajax({
                type: 'POST',
                url: '/purchaseorder/getorderdetails',
                data: {
                    orderid: orderid,
                },
                success: function (result) {
                    var data = result.data;

                    $('#orderdetails-dataTable tbody').empty();

                    $.each(data, function (key, item) {
                        var productid = item.productid;
                        var orderid = item.orderid;
                        var description = item.description;
                        var quantity = item.quantity;
                        var unitprice = item.unitprice;
                        var totalprice = item.totalprice;

                        var newRow = $("<tr>");
                        newRow.append($("<td>").attr('data-label', 'Product ID').addClass('custom-mobile-align').text(productid));
                        newRow.append($("<td>").attr('data-label', 'Order ID').addClass('custom-mobile-align').text(orderid));
                        newRow.append($("<td>").attr('data-label', 'Description').addClass('custom-mobile-align').text(description));
                        newRow.append($("<td>").attr('data-label', 'Quantity').addClass('custom-mobile-align').text(quantity));
                        newRow.append($("<td>").attr('data-label', 'Unit Price').addClass('custom-mobile-align').text(formatCurrency(unitprice)));
                        newRow.append($("<td>").attr('data-label', 'Total Price').addClass('custom-mobile-align').text(formatCurrency(totalprice)));

                        $('#orderdetails-dataTable tbody').append(newRow);
                    });
                },
                error: function (err) {
                    errormsg(err);
                }
            });
        });

        //#region Add Product Dropdown
        function AddProduct(dropdownID, activeData, inputID, hiddenID) {
            for (const data of activeData) {
                AddProductDropdown(dropdownID, data.display, data.value, inputID, hiddenID);
            }
        }

        function AddProductDropdown(dropdownID, displayText, actualValue, inputID, hiddenID) {
            const dropdownElement = $("#" + dropdownID);
            const hiddenInput = $("#" + hiddenID);

            const newOption = $("<div>")
                .addClass("dropdown-option")
                .text(displayText)
                .attr("data-value", actualValue);

            newOption.on("click", function () {
                let newAction = '<button class="btn btn-outline-danger delete-row" id="deleterow"><i class="fas fa-trash-alt"></i></button>';
                console.log(displayText, actualValue)
                const inputElement = $("#" + inputID);
                const row = inputElement.closest("tr");
                inputElement.val(displayText);
                hiddenInput.val(actualValue);
                dropdownElement.hide();
                selectedProduct.push(displayText);

                $.ajax({
                    type: "POST",
                    url: "/productionmaterials/getmaterials",
                    data: {
                        materialid: actualValue
                    },
                    success: function (result) {
                        let data = result.data;
                        $.ajax({
                            type: "POST",
                            url: "/materialcount/getUnits",
                            data: {
                                productid: actualValue
                            },
                            success: function (result) {
                                let materialcount = result.data
                                inputElement.prop("disabled", true);
                                row.find('.cost').text(formatCurrency(data[0].price));
                                row.find('.units').text(materialcount[0].unit);
                                row.find("#actionBtn").html(newAction);
                            },
                            error: function (err) {
                                errormsg(err);
                            },
                        });
                    },
                    error: function (err) {
                        errormsg(err);
                    },
                });

                AddTableRow(counter);
                counter++;
            });

            dropdownElement.append(newOption);
            SetupDropdown(inputID, dropdownID, "dropdown-option");
        }
        //#endregion

        //#region Add Row to Table Dynamically
        function AddTableRow(counter) {
            let NewRow = `<tr>
                    <td data-label="Product Name" class="custom-mobile-align">
                        <div class="col">
                            <div class="input-group">
                                <input autocomplete="off" class="form-control text-center custom-input"
                                    placeholder="Select product" name="product" id="product${counter}" />
                                <input autocomplete="off" type="hidden" id="productID${counter}"
                                    name="productID" />
                            </div>
                            <div class="custom-dropdown cdw-tableoption" id="productDropdown${counter}"></div>
                        </div>
                    </td>
                    <td data-label="Units" class="custom-mobile-align units"></td>
                    <td data-label="Cost" class="custom-mobile-align cost"></td>
                    <td data-label="Quantity" class="custom-mobile-align">
                        <div class="row justify-content-center">
                            <input id="quantity" name="quantity" type="number" class="form-control"
                                placeholder="0.00" value="" maxlength="8">
                        </div>
                    </td>
                    <td data-label="Action" class="custom-mobile-align" id="actionBtn"></td>
                  </tr>;`;
            $("#purchaseorder-datatable").append(NewRow);

            $.ajax({
                type: "GET",
                url: "/productionmaterials/load",
                success: function (result) {
                    let activeData = [];
                    let dropdownID = `productDropdown${counter}`;
                    let inputID = `product${counter}`;
                    let hiddenID = `productID${counter}`;
                    let container = result.data;
                    console.log(selectedProduct);

                    $.each(container, (key, item) => {
                        if (item.status === "ACTIVE") {
                            let name = item.productname;
                            let id = item.productid;
                            if (!selectedProduct.includes(name)) {
                                activeData.push({
                                    display: name,
                                    value: id,
                                });
                            }
                        }
                    });
                    AddProduct(dropdownID, activeData, inputID, hiddenID);
                },
                error: function (err) {
                    warning("Warning", err);
                },
            });
        }
        //#endregion

        //#region Delete Row
        $(document).on("click", "#deleterow", function (e) {
            let productValue = $(this).closest("tr").find(".custom-input").val();
            var index = selectedProduct.indexOf(productValue);
            if (index !== -1) {
                selectedProduct.splice(index, 1);
            }
            let $row = $(this).closest("tr");
            let rowIndex = $row.index();
            $row.remove();

            var $table = $("#purchaseorder-datatable");
            $table.find("tbody tr:last").remove();
            AddTableRow(counter);
            counter++;
        });
        //#endregion

        //#region Adding Material

        $(document).on("input", "#vendor", function () {
            $("#vendorID").val("");
        });

        $(document).on("click", "#submitBtn", function () {
            let message = "";
            let poiData = getPurchaseOrderData();

            let vendor = $("#vendorID").val();
            let orderdate = $('#orderdate').val();
            let deliverydate = $('#deliverydate').val();
            let paymentterms = $('#paymentterms').val();
            let deliverymethod = $('#deliverymethod').val();
            let totalAmount = getTotalAmount();

            if (vendor === "") {
                message += "Empty Vendor Name ";
            }

            if ($("#purchaseorder-datatable tbody tr:not(:last)").length === 0) {
                message += "Add Purchase Order Table Cannot be Empty, ";
            }

            $("#purchaseorder-datatable tbody tr:not(:last)").each(function (index) {
                var quantity = $(this).find('input[name="quantity"]').val();
                var product = $(this).find('input[name="productID"]').val();

                if (quantity == 0 || quantity <= 0) {
                    message += "0 or Negative Quantity in Row " + (index + 1) + ", ";
                }

                if (product == "") {
                    message += "Empty Product in Row " + (index + 1) + ", ";
                }
            });

            if (orderdate == '') { message += 'Order Date, ' }
            if (deliverydate == '') { message += 'Delivery Date, ' }
            if (paymentterms == '') { message += 'Payment Term, ' }
            if (deliverymethod == '') { message += 'Delivery Method, ' }


            if (message != "") {
                warning("Required", message);
            } else {
                console.log(poiData, totalAmount, "Total Amount");

                $.ajax({
                    type: 'POST',
                    url: '/purchaseorder/save',
                    data: {
                        vendorid: vendor,
                        orderdate: orderdate,
                        deliverydate: deliverydate,
                        totalamount: totalAmount,
                        paymentterms: paymentterms,
                        deliverymethod: deliverymethod,
                        poiData: poiData,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable()
                            success('Saved', 'Successfully')
                            $('#vendor').val('');
                            $('#vendorID').val('');
                            $('#orderdate').val('');
                            $('#deliverydate').val('');
                            $('#paymentterms').val('');
                            $('#deliverymethod').val('');

                            $("#purchaseorder-datatable tbody tr:not(:last)").remove();
                            while (selectedProduct.length > 0) {
                                selectedProduct.pop();
                            }
                            AddTableRow(counter);
                            counter++;
                            success("Saved", "Successfully");
                        }
    
                        if (result.msg == 'exist') {
                            warning('Exist', `${vendorid} already exist!`);
                        }
                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        });

        function getPurchaseOrderData() {
            var jsonData = [];
            $("#purchaseorder-datatable tbody tr:not(:last)").each(function (index) {
                var row = $(this);
                var quantity = row.find('input[name="quantity"]').val();
                var product = row.find('input[name="productID"]').val();
                var cost = RemoveCurrencyFormatting(row.find(".cost").text());
                let totalcost = parseFloat(cost) * parseFloat(quantity);

                jsonData.push({
                    description: product,
                    quantity: quantity,
                    unitprice: cost,
                    totalprice: totalcost,
                });
            });

            return JSON.stringify(jsonData);
        }

        function getTotalAmount(){
            var totalAmount = 0;
            $("#purchaseorder-datatable tbody tr:not(:last)").each(function (index) {
                var row = $(this);
                var quantity = row.find('input[name="quantity"]').val();
                var cost = RemoveCurrencyFormatting(row.find(".cost").text());
                let totalcost = parseFloat(cost) * parseFloat(quantity);
                totalAmount += totalcost;
            });

            return totalAmount;
        }
        //#endregion

        $.ajax({
            type: "GET",
            url: "/vendors/load",
            success: function (result) {
                let activeData = [];
                let dropdownID = "vendorDropdown";
                let inputID = "vendor";
                let hiddenID = "vendorID";
                let container = result.data;
                // console.log(container)
                $.each(container, (key, item) => {
                    if (item.status === "ACTIVE") {
                        let name = item.vendorname;
                        let id = item.vendorid;
                        activeData.push({
                            display: name,
                            value: id,
                        });
                    }
                });
                AddDropdownData(dropdownID, activeData, inputID, hiddenID);
            },
            error: function (err) {
                warning("Warning", err);
            },
        });

        $.ajax({
            type: "GET",
            url: "/productionmaterials/load",
            success: function (result) {
                let activeData = [];
                let dropdownID = "productDropdown";
                let inputID = "product";
                let hiddenID = "productID";
                let container = result.data;
                // console.log(container)
                $.each(container, (key, item) => {
                    if (item.status === "ACTIVE") {
                        let name = item.productname;
                        let id = item.productid;
                        activeData.push({
                            display: name,
                            value: id,
                        });
                    }
                });
                AddProduct(dropdownID, activeData, inputID, hiddenID);
            },
            error: function (err) {
                warning("Warning", err);
            },
        });

        $(document).on('click', '#approveBtn', function () {
            console.log(orderid);
            console.log(status);
            $.ajax({
                type: 'POST',
                url: '/purchaseorder/approve',
                data: {
                    status: status,
                    orderid: orderid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }

                    if (result.msg == 'notexist') {
                        warning(`${orderid} does not exist!`);
                    }

                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });

        $(document).on('click', '#cancelBtn', function () {
            console.log(orderid);
            console.log(status);
            $.ajax({
                type: 'POST',
                url: '/purchaseorder/cancel',
                data: {
                    status: status,
                    orderid: orderid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }

                    if (result.msg == 'notexist') {
                        warning(`${orderid} does not exist!`);
                    }

                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });

        //#region Table Display and Actions
        function filterTableRows() {
            const searchQuery = $('#search-input').val().trim().toLowerCase();
            let foundMatches = false;

            $('#no-match-row').remove();

            $('#datatable tbody tr').each(function () {
                const rowData = $(this).text().toLowerCase();
                if (rowData.includes(searchQuery)) {
                    $(this).show();
                    foundMatches = true;
                } else {
                    $(this).hide();
                }
            });

            if (!foundMatches) {
                const noMatchRow = $('<tr>').append(
                    $('<td>', {
                        colspan: 9,
                        class: 'text-center',
                        text: 'No Data Matched'
                    })
                );
                $('#datatable tbody').append(noMatchRow);
                noMatchRow.attr('id', 'no-match-row');
            }
        }

        $('#search-input').on('input', filterTableRows);

        function populateDataTable(data) {
            console.log(data);
            const tableBody = $('#datatable tbody');
            tableBody.empty();

            if (data.length === 0) {
                const tr = $('<tr>').append($('<td>', {
                    colspan: 9,
                    class: 'text-center',
                    text: 'No Data Matched'
                }));
                tableBody.append(tr);
            } else {
                data.forEach(item => {
                    if (item.status !== 'DELETED') {
                        let action = '';
                        if (item.status === 'PENDING') {
                            action = `<button id="approveBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="approveBtn">APPROVE</button>
                                        <button id="cancelBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="cancelBtn">CANCEL</button>`;

                        } else if (item.status === 'APPROVED') {
                            action = `<button id="printBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="printBtn">PRINT</button>
                            <button id="reportBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="reportBtn">REPORT</button>`;
                        }
                        const statusBackground = getStatusBackground(item.status);
                        const containerBackground = getStatusContainerBackground(item.status);

                        const tr = $('<tr>').append(
                            $('<td>', {
                                text: item.orderid,
                                'data-label': 'Order ID',
                                class: 'custom-mobile-align bmss-link',
                                'data-toggle': 'modal',
                                'data-target': '#order-details-modal'
                            }),
                            $('<td>', { text: item.vendorid, 'data-label': 'Vendor ID', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.orderdate, 'data-label': 'Order Date', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.deliverydate, 'data-label': 'Delivery Date', class: 'custom-mobile-align' }),
                            $('<td>', { text: formatCurrency(item.amount), 'data-label': 'Total Amount', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.paymentterms, 'data-label': 'Payment Term', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.deliverymethod, 'data-label': 'Delivery Method', class: 'custom-mobile-align' }),
                            $('<td>', { class: 'custom-mobile-align', 'data-label': 'Status' }).append(
                                $('<div>', { class: containerBackground }).append(
                                    $('<span>', { text: item.status, class: statusBackground })
                                )
                            ),
                            $('<td>', { html: action, 'data-label': 'Action', class: '' })
                        );

                        tableBody.append(tr);
                    }
                });
            }
        }

        function LoadTable() {
            $(".progress").hide();
            $(".progress").slideDown();

            $.ajax({
                url: '/purchaseorder/load',
                method: 'GET',
                dataType: 'json',
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                populateDataTable(data.data);
                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
        //#endregion

    })
</script>