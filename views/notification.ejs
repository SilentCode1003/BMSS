<script>
    $(document).ready(function () {
        var audioElement = $('<audio>', {
            id: 'notificationSound',
            src: '/assets/notify.wav',
            type: 'audio/wav',
            text: 'Your browser does not support the audio element.'
        });

        $('body').append(audioElement);
        let notifcount = 0;

        const socket = io();

        socket.on('pushNotification', (data) => {
            // console.log(data)
            if (data.length != 0) {
                data.forEach((item) => {
                    if (item.userid == '<%= usercode%>') {
                        let existingNotification = $(`#${item.notifid}`);
                        if (item.status === "CLOSED") {
                            existingNotification.remove();
                        } else {
                            notifcount += 1;
                            if (existingNotification.length > 0) {
                                existingNotification.find('.message-div').html(`
                                <span>Branch: ${item.branchid}</span><br>
                                <span>Stocks Alert: ${item.product} is ${item.message}! with Quantity of ${item.quantity}</span>
                                <div class="small" data-timestamp="${item.date}">${formatTime(item.date)}</div>
                            `);

                                if (item.status === "UNREAD") {
                                    existingNotification.find('.message-div').css('font-weight', 'bold');
                                } else {
                                    existingNotification.find('.message-div').css('font-weight', 'normal');
                                }
                            } else {
                                // console.log('Appending new notification:', item.notifid);
                                let fontWeight = (item.status === "UNREAD") ? 'bold' : 'normal';
                                let pushNotification = `
                                    <div class="notification">
                                        <a id="${item.notifid}" class="dropdown-item d-flex align-items-center" href="/productinventory">
                                            <div class="mr-3">
                                                <div class="icon-circle bg-warning">
                                                    <i class="fas fa-box text-white"></i>
                                                </div>
                                            </div>
                                            <div class="message-div">
                                                <span style="font-weight: ${fontWeight}">Branch: ${item.branch} (${item.branchid})</span><br>
                                                <span style="font-weight: ${fontWeight}">Stocks Alert: ${item.product} is ${item.message}! with Quantity of ${item.quantity}</span>
                                                <div class="small" data-timestamp="${item.date}">${formatTime(item.date)}</div>
                                            </div>
                                        </a>
                                        <div class="close-btn">
                                            <button class="btn btn-sm mr-3 drop-btn rounded-circle">
                                                <i class="fas fa-times" style="color: #e74a3b;"></i>
                                            </button>
                                        </div>
                                    </div>`;
                                $('#alert-container').prepend(pushNotification);
                                if (!localStorage.getItem(item.notifid)) {
                                    localStorage.setItem(item.notifid, 'true');
                                    info('Notification', `${item.product} is ${item.message}!`)
                                    $('#notificationSound')[0].play();
                                }
                            }
                        }
                        $('#badgecount').text(notifcount);
                    }
                });
            }
        })

        socket.on('pushRequestNotification', (data) => {
            // console.log(data)
            if (data.length != 0) {
                data.forEach((item) => {
                    if (item.userid == '<%= usercode%>') {
                        let existingNotification = $(`#${item.id}`);
                        if (item.status === "CLOSED") {
                            existingNotification.remove();
                        } else {
                            notifcount += 1;
                            if (existingNotification.length > 0) {
                                existingNotification.find('.message-div').html(`
                                <span>Branch: ${item.branch}</span><br>
                                <span>${item.message}!</span>
                                <div class="small" data-timestamp="${item.date}">${formatTime(item.date)}</div>
                            `);

                                if (item.status === "UNREAD") {
                                    existingNotification.find('.message-div').css('font-weight', 'bold');
                                } else {
                                    existingNotification.find('.message-div').css('font-weight', 'normal');
                                }
                            } else {
                                let link;
                                // console.log(item.type)
                                if(item.type === "PRODUCTION TRANSFER"){
                                    link = "/productiontransfer"
                                }else{
                                    link = "/transferorder"
                                }
                                // console.log(link)
                                // console.log('Appending new notification:', item.notifid);
                                let fontWeight = (item.status === "UNREAD") ? 'bold' : 'normal';
                                let pushNotification = `
                                    <div class="notification">
                                        <a id="${item.id}-request" class="dropdown-item d-flex align-items-center" href=${link}>
                                            <div class="mr-3">
                                                <div class="icon-circle bg-warning">
                                                    <i class="fas fa-box text-white"></i>
                                                </div>
                                            </div>
                                            <div class="message-div">
                                                <span style="font-weight: ${fontWeight}">Branch: ${item.branch}</span><br>
                                                <span style="font-weight: ${fontWeight}">${item.message}!</span>
                                                <div class="small" data-timestamp="${item.date}">${formatTime(item.date)}</div>
                                            </div>
                                        </a>
                                        <div class="close-btn">
                                            <button class="btn btn-sm mr-3 drop-btn rounded-circle">
                                                <i class="fas fa-times" style="color: #e74a3b;"></i>
                                            </button>
                                        </div>
                                    </div>`;
                                $('#alert-container').prepend(pushNotification);
                                if (!localStorage.getItem(item.id)) {
                                    localStorage.setItem(item.id, 'true');
                                    info('Notification', `${item.type}`)
                                    $('#notificationSound')[0].play();
                                }
                            }
                        }
                        $('#badgecount').text(notifcount);
                    }
                });
            }
        });

        $('#alert-container').on('click', '.drop-btn', function (event) {
            event.preventDefault();
            event.stopPropagation();
            let notificationDiv = $(this).closest(".notification");
            let notifid = notificationDiv.find("a").attr("id");

            // console.log("notifid:", notifid);
            $.ajax({
                type: 'POST',
                url: '/salesdetails/close',
                data: {
                    notifid: notifid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        console.log('success')
                        window.location.reload();
                    }
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });

        $('#alert-container').on('click', '.notification', function (event) {
            // event.preventDefault();
            // event.stopPropagation();
            let notificationDiv = $(this).closest(".notification");
            let notifid = notificationDiv.find("a").attr("id");

            // console.log("notifid:", notifid);

            $.ajax({
                type: 'POST',
                url: '/salesdetails/read',
                data: {
                    notifid: notifid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        // console.log('success')
                    }
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });

        setInterval(updateTimeDisplay, 60000);

        function updateTimeDisplay() {
            $('.small.text-gray-500').each(function () {
                const timestamp = $(this).data('timestamp');
                $(this).text(formatTime(timestamp));
            });
        }

        function formatTime(timestamp) {
            const currentTime = new Date();
            const notificationTime = new Date(timestamp);

            const timeDifference = currentTime - notificationTime;
            const seconds = Math.floor(timeDifference / 1000);
            const minutes = Math.floor(seconds / 60);
            const hours = Math.floor(minutes / 60);
            const days = Math.floor(hours / 24);

            if (days > 0) {
                return `${days} day${days > 1 ? 's' : ''} ago`;
            } else if (hours > 0) {
                return `${hours} hr${hours > 1 ? 's' : ''} ago`;
            } else if (minutes > 0) {
                return `${minutes} min${minutes > 1 ? 's' : ''} ago`;
            } else {
                return 'Just now';
            }
        }

    });

</script>