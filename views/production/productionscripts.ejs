<script>
    $(document).ready(function () {
        let pr = "";
        let productionid = "";
        let productid = "";
        let quantity = "";
        let status = "";
        LoadTable();

        $('#production-datatable tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            console.log(dataRow);
            productionid = dataRow[0];
            productid = dataRow[1];
            quantity = dataRow[4];
            status = dataRow[8];
        });

        $(document).on('click', '#submitBtn', function(){
            let producedquantity = $('#producedquantity').val()
            if (producedquantity != 0){
                $.ajax({
                    type: 'POST',
                    url: '/production/recordinventory',
                    data: {
                        productionid: productionid,
                        productid: productid,
                        quantity: producedquantity,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable();
                            success('Saved', 'Report successfully recorded')
                            $('#productionid').val('');
                            $('#expectedquantity').val('');
                            $('#producedquantity').val('');

                            $('#reportmodal').modal('hide');
                        }
        
                        if (result.msg == 'err') {
                            warning(`ERROR`);
                        }
        
                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }else{
                warning('Warning', `Produced Quantity can not be empty`);
            }
        });

        $(document).on('click', '#reportBtn', function(){
            $('#productionid').val(productid);
            $('#expectedquantity').val(quantity);

            $('#reportmodal').modal('show');
        });

        $(document).on('keyup', '#producedquantity', function() {
            let producedquantity = parseFloat($(this).val());
            let expectedquantity = parseFloat($('#expectedquantity').val());
            console.log('Expected quantity change:' + producedquantity);
            if (!isNaN(producedquantity) && !isNaN(expectedquantity) && producedquantity > expectedquantity) {
                warning('Error', `Produced quantity exceeds expected quantity`);
                $(this).val('');
            }
        });

        let overallMaxQuantity = [];
        $(document).on('change', '#productid', function() {
            $('#max-quantity').text('');
            $('#components-datatable tbody').empty();
            let productid = $(this).val();
            console.log('Product id changed to:' + productid);

            if(productid != ''){
                $('#quantity').prop('disabled', false);
                var maxQuantities = [];
                $.ajax({
                    type: 'POST',
                    url: '/productioncomponents/getcomponents',
                    data: {
                        productid: productid,
                    },
                    success: function (result) {
                        overallMaxQuantity = 0;
                        var data = JSON.parse(result.data[0].components);
                        console.log(data);

                        $.each(data, function (index, item) {
                            console.log(item.materialname);
                            var materialid = item.materialid;
                            var materialname = item.materialname;
                            var quantity = item.quantity;
                            var cost = item.cost;
                            var unit = item.unit;

                            $.ajax({
                                type: 'POST',
                                url: '/materialcount/getcurrentquantity',
                                data: {
                                    productid: materialid,
                                },
                                success: function (result) {
                                    var data = result.data[0];
                                    // console.log(data);

                                    var newRow = $("<tr>");
                                    newRow.append($("<td>").attr('data-label', 'Material ID').addClass('custom-mobile-align').text(materialid));
                                    newRow.append($("<td>").attr('data-label', 'Material Name').addClass('custom-mobile-align').text(materialname));
                                    newRow.append($("<td>").attr('data-label', 'Cost').addClass('custom-mobile-align').text('â‚±'+cost));
                                    newRow.append($("<td>").attr('data-label', 'Unit').addClass('custom-mobile-align').text(unit));
                                    newRow.append($("<td>").attr('data-label', 'Quantity').addClass('custom-mobile-align').text(quantity));
                                    newRow.append($("<td>").attr('data-label', 'Current Stock').addClass('custom-mobile-align').text(data.currentquantity));
                                    $('#components-datatable tbody').append(newRow);

                                    var maxQuantity = Math.floor(data.currentquantity / quantity);
                                    maxQuantities.push(maxQuantity);
                                    overallMaxQuantity = Math.min(...maxQuantities);                      
                                    $('#max-quantity').text(overallMaxQuantity);
                                },
                                error: function (err) {
                                    errormsg(err);
                                }
                            });   
                        });

                        $(document).on('keyup', '#quantity', function() {
                            let quantity = $(this).val();
                            if (quantity > overallMaxQuantity){
                                warning('Warning!', `Maximum quantity exceeded.`);
                                $(this).val('');
                                // console.log(overallMaxQuantity)
                            }
                        });
                    },
                    error: function (err) {
                        errormsg(err);
                    }
                });
            }else{
                $('#quantity').prop('disabled', true);
            }
            
        });
    
        $(document).on('click', '#addBtn', function () {
            let productid = $('#productid').val();
            let quantity = $('#quantity').val();
            let startdate = $('#startdate').val();
            let enddate = $('#enddate').val();
            let employeeid = $('#employeelist').val();
            let productionline = $('#productionline').val();
            let notes = $('#notes').val();
    
            var message = "";
            if (productid == '') { message += 'Product, ' }
            if (quantity == '') { message += 'Quantity, ' }
            if (startdate == '') { message += 'Start Date, ' }
            if (enddate == '') { message += 'End Date, ' }
    
            if (message != '') {
                warning('Required', `Please fill up ${message}`);
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/production/save',
                    data: {
                        productid: productid,
                        startdate: startdate,
                        enddate: enddate,
                        quantityproduced: quantity,
                        productionline: productionline,
                        employeeid: employeeid,
                        notes: notes,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable()
                            success('Saved', 'Successfully')
                            $('#selectedproduct').text('Select Product');
                            $('#quantity').val('');
                            $('#startdate').val('');
                            $('#enddate').val('');
                            $('#employeelist').val('');
                            $('#notes').val('');
                            $('#productionline').val('');
                            $('#components-datatable tbody').empty();
                        }
    
                        if (result.msg == 'exist') {
                            warning('Exist', `${productid} already exist!`);
                        }
    
                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        });
    
        function populateProductionTable(data) {
            // console.log(data);
            const tableBody = $('#production-datatable tbody');
            tableBody.empty();
    
            if (data.length === 0) {
                const tr = $('<tr>').append($('<td>', {
                    colspan: 9,
                    class: 'text-center',
                    text: 'No Data Matched'
                }));
                tableBody.append(tr);
            } else {
                data.forEach(item => {
                    if (item.status !== 'DELETED') {
                        let action = '';
                        if (item.status === 'PENDING') {
                            action = `<button id="approveBtn" class="btn btn-outline-inventory shadow-sm w-100" name="approveBtn">APPROVE</button>
                            <button id="cancelBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="cancelBtn">CANCEL</button>`;
                        } else if (item.status === 'IN PROGRESS') {
                            action = `<button id="reportBtn" class="btn btn-outline-inventory shadow-sm w-100" name="reportBtn">REPORT</button>`;
                        }
    
                        const tr = $('<tr>').append(
                            $('<td>', { text: item.productionid, 'data-label': 'Production ID', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.productid, 'data-label': 'Product ID', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.startdate, 'data-label': 'Start Date', class: 'custom-mobile-align responsive-wrap' }),
                            $('<td>', { text: item.enddate, 'data-label': 'End Date', class: 'custom-mobile-align responsive-wrap' }),
                            $('<td>', { text: item.quantityproduced, 'data-label': 'Quantity', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.productiononline, 'data-label': 'Production Line', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.supervisorid, 'data-label': 'Supervisor', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.notes, 'data-label': 'Notes', class: 'custom-mobile-align' }),
                            $('<td>', { text: item.status, 'data-label': 'Status', class: 'custom-mobile-align' }),
                            $('<td>', { html: action, 'data-label': 'Action', class: '' })
                        );
    
                        tableBody.append(tr);
                    }
                });
            }
        }
    
        function LoadTable() {
            $(".progress").hide();
            $(".progress").slideDown();
    
            $.ajax({
                url: '/production/load',
                method: 'GET',
                dataType: 'json',
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                console.log(data.data)
                                populateProductionTable(data.data);
                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
    
        function LoadList() {
            $.ajax({
                type: 'GET',
                url: '/productioncomponents/load',
                success: function (result) {
                    var data = result.data;
                    // console.log(data)
                    $.each(data, function (key, item) {
                        let productid = item.productid;
                        if (item.status == "ACTIVE") {
                            $.ajax({
                                type: 'GET',
                                url: '/products/getproductdetails',
                                data: {
                                    productid: productid
                                },
                                success: function (result) {
                                    let container = result.data;
                                    let productname = container[0];
                                    
                                    var listItem = $('<li></li>')
                                    .text(productname.description)
                                    .data('productid', item.productid);

                                    $('.productlist').append(listItem);
                                    
                                },
                                error: function (err) {
                                    errormsg(err);
                                }
                            });
                        }
                    });
                },
                error: function (err) {
                    errormsg(err);
                }
            });

            $.ajax({
                type: 'GET',
                url: '/employees/load',
                success: function (result) {
                    var data = result.data;
                    $.each(data, function (key, item) {
                        if (item.status == "ACTIVE"){
                            var options = new Option(item.fullname, item.employeeid);
                            $('#employeelist').append(options);
                        }
                    });
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        }
    
        $(document).on('click', '#approveBtn', function(){
            // console.log(employeeid);
            // console.log(status);
            $.ajax({
                type: 'POST',
                url: '/production/approve',
                data: {
                    status: status,
                    productionid: productionid,
                    productid: productid,
                    quantity: quantity,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                        console.log(result.data);
                    }
    
                    if (result.msg == 'insufficient') {
                        warning(`Not Enough Materials!`);
                    }
    
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });
    
        $(document).on('click', '#inactiveBtn', function(){
            // console.log(employeeid);
            // console.log(status);
            $.ajax({
                type: 'POST',
                url: '/production/status',
                data: {
                    status: status,
                    productionid: productionid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }
    
                    if (result.msg == 'notexist') {
                        warning(`${productionid} does not exist!`);
                    }
    
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });
    
        function filterTableRows() {
            const searchQuery = $('#search-input').val().trim().toLowerCase();
            let foundMatches = false;
    
            $('#no-match-row').remove();
    
            $('#employees-dataTable tbody tr').each(function() {
                const rowData = $(this).text().toLowerCase();
                if (rowData.includes(searchQuery)) {
                    $(this).show();
                    foundMatches = true;
                } else {
                    $(this).hide();
                }
            });
    
            if (!foundMatches) {
                const noMatchRow = $('<tr>').append(
                    $('<td>', {
                        colspan: 9,
                        class: 'text-center',
                        text: 'No Data Matched'
                    })
                );
                $('#employees-dataTable tbody').append(noMatchRow);
                noMatchRow.attr('id', 'no-match-row');
            }
        }
    
        $('#search-input').on('input', filterTableRows);

        var startDateInput = document.getElementById('startdate');
        var endDateInput = document.getElementById('enddate');

        startDateInput.addEventListener('change', function() {
            endDateInput.min = startDateInput.value;
            
            if (endDateInput.value < startDateInput.value) {
                endDateInput.value = startDateInput.value;
            }
        });

        
        $('.productlist').on('click', 'li', function () {
            var selectedOption = $(this).text();
            var selectedProductId = $(this).data('productid');

            $('#selectedproduct').text(selectedOption);
            $('#productid').val(selectedProductId).change();
        });

            
        LoadList()
    });
</script>