<script>

    $(document).ready(function () {
        let base64String = "";
        let base64Stringmodal = "";
        let branchid = "";
        let status = "";
    
        LoadTable();
    
        $('#branch-dataTable tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            console.log(dataRow);
            branchid = dataRow[0];
            status = dataRow[7]
        }) 

        $(document).on('click', '#editBtn', function(){
            $('#branchidmodal').val(branchid);
            $('#branchModal').modal('show');
        })

        $(document).on('click', '#closeBtn', function(){
            $('#branchnamemodal').val('');
            $('#tinmodal').val('');
            $('#addressmodal').val('');
            $('#imageinputmodal').val('');
        })

        $(document).on("change", "#imageinputmodal", function () {
            const input = document.getElementById("imageinputmodal");
            const file = input.files[0];
    
            const reader = new FileReader();
            reader.onload = function () {
                const img = new Image();
                img.src = reader.result;
                img.onload = function () {
                    const maxWidth = 300; 
                    const maxHeight = 300; 
    
                    let width = img.width;
                    let height = img.height;
    
                    if (width > maxWidth) {
                        height *= maxWidth / width;
                        width = maxWidth;
                    }
    
                    if (height > maxHeight) {
                        width *= maxHeight / height;
                        height = maxHeight;
                    }
    
                    const canvas = document.createElement("canvas");
                    const ctx = canvas.getContext("2d");
                    canvas.width = width;
                    canvas.height = height;
                    ctx.drawImage(img, 0, 0, width, height);
    
                    const base64Stringmodal = canvas.toDataURL("image/png"); // You can change the format if needed
    
                    const preview = document.getElementById("logoimagemodal");
                    preview.src = base64Stringmodal;
                    
                    imageUploadModal(base64Stringmodal);
                };
            };
            reader.readAsDataURL(file);
        });
    
        function imageUploadModal() {
            const input = document.getElementById("imageinputmodal");
            const file = input.files[0];
    
            var reader = new FileReader();
            console.log("next");
    
            reader.onload = function () {
            base64Stringmodal = reader.result.replace("data:", "").replace(/^.+,/, "");

            console.log(base64Stringmodal);
            };
            reader.readAsDataURL(file);
            
        }
    
        $(document).on("change", "#imageInput", function () {
            const input = document.getElementById("imageInput");
            const file = input.files[0];
    
            const reader = new FileReader();
            reader.onload = function () {
                const img = new Image();
                img.src = reader.result;
                img.onload = function () {
                    const maxWidth = 300; 
                    const maxHeight = 300; 
    
                    let width = img.width;
                    let height = img.height;
    
                    if (width > maxWidth) {
                        height *= maxWidth / width;
                        width = maxWidth;
                    }
    
                    if (height > maxHeight) {
                        width *= maxHeight / height;
                        height = maxHeight;
                    }
    
                    const canvas = document.createElement("canvas");
                    const ctx = canvas.getContext("2d");
                    canvas.width = width;
                    canvas.height = height;
                    ctx.drawImage(img, 0, 0, width, height);
    
                    const resizedBase64 = canvas.toDataURL("image/png"); // You can change the format if needed
    
                    const preview = document.getElementById("logoimage");
                    preview.src = resizedBase64;
                    
                    imageUploaded(resizedBase64);
                };
            };
            reader.readAsDataURL(file);
        });
    
        function imageUploaded() {
            const input = document.getElementById("imageInput");
            const file = input.files[0];
    
            var reader = new FileReader();
            console.log("next");
    
            reader.onload = function () {
            base64String = reader.result.replace("data:", "").replace(/^.+,/, "");
            // alert(imageBase64Stringsep);
            console.log(base64String);
            };
            reader.readAsDataURL(file);
            
        }
    
        $(document).on('click', '#addBtn', function () {
            
            let branchid = $('#branchid').val();
            let branchname = $('#branchname').val();
            let tin = $('#tin').val();
            let address = $('#address').val();
            let logo = base64String
    
            var message = "";
    
            if (branchid == '') { message += 'Branch ID ' }
            if (branchname == '') { message += 'Branch Name ' }
            if (tin == '') { message += 'TIN ' }
            if (address == '') { message += 'Address ' }
            if (logo == '') { message += 'Logo Image ' }
    
            if (message != '') {
                warning('Required', `Please fill up ${message}`);
            }
            else {
                
                $.ajax({
                    type: 'POST',
                    url: '/branch/save',
                    data: {
                        branchid: branchid,
                        branchname: branchname,
                        tin: tin,
                        address: address,
                        logo: logo,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable();
                            success('Saved', 'Successfully')
                            $('#branchid').val('');
                            $('#branchname').val('');
                            $('#tin').val('');
                            $('#address').val('');
                        }
    
                        if (result.msg == 'exist') {
                            warning('Exist', `${branchid} already exist!`);
                        }
    
                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        })

        function populateBranchTable(data) {
            // const addBtn = $('#addBtn');
            // if (data.length === 1) {
            //     addBtn.prop('disabled', true);
            // } else {
            //     addBtn.prop('disabled', false);
            // }
            console.log(data);
            const tableBody = $('#branch-dataTable tbody');
            tableBody.empty();

            if (data.length === 0) {
                const tr = $('<tr>').append($('<td>', {
                    colspan: 9,
                    class: 'text-center',
                    text: 'No Data Matched'
                }));
                tableBody.append(tr);
            } else {
                data.forEach(item => {
                    let action = '';
                    if (item.status === 'ACTIVE') {
                        action = `
                            <button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                            <button id="inactiveBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="inactiveBtn">INACTIVE</button>`;
                    } else if (item.status === 'INACTIVE') {
                        action = `
                            <button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                            <button id="activeBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="activeBtn">ACTIVE</button>`;
                    }

                    const tr = $('<tr>').append(
                        $('<td>', { text: item.branchid, 'data-label': 'Branch ID', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.branchname, 'data-label': 'Branch Name', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.tin, 'data-label': 'TIN', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.address, 'data-label': 'Address', class: 'custom-mobile-align' }),
                        $('<td>', { html: `<img src="data:image/svg+xml;base64,${item.logo}" alt="Branch Logo" class="branch-logo" style="max-width: 150px; max-height: 150px;"/>` }),
                        $('<td>', { text: item.createdby, 'data-label': 'Created By', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.createddate, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.status, 'data-label': 'Status', class: 'custom-mobile-align' }),
                        $('<td>', { html: action, 'data-label': 'Action' })
                    );

                    tableBody.append(tr);
                });
            }
        }
    
        function LoadTable() {
            $(".progress").hide();
            $(".progress").slideDown();

            $.ajax({
                url: '/branch/load',
                method: 'GET',
                dataType: 'json',
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                populateBranchTable(data.data);
                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
    
        $(document).on('click', '#activeBtn', function(){
            console.log(branchid);
            console.log(status);
            $.ajax({
                type: 'POST',
                url: '/branch/status',
                data: {
                    status: status,
                    branchid: branchid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }
    
                    if (result.msg == 'notexist') {
                        warning(`${branchid} does not exist!`);
                    }
    
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });
    
        $(document).on('click', '#inactiveBtn', function(){
            console.log(branchid);
            console.log(status);
            $.ajax({
                type: 'POST',
                url: '/branch/status',
                data: {
                    status: status,
                    branchid: branchid,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                    }
    
                    if (result.msg == 'notexist') {
                        warning(`${branchid} does not exist!`);
                    }
    
                },
                error: function (err) {
                    errormsg(err);
                }
            })
        });

        $(document).on('click', '#updateBtn', function () {
            let branchid = $('#branchidmodal').val();
            let branchname = $('#branchnamemodal').val();
            let tin = $('#tinmodal').val();
            let address = $('#addressmodal').val();
            let logo = base64Stringmodal;

            var message = "";

            if (branchname == '' && tin == '' && address == '' && logo == ''){
                message += 'Fill up atleast 1 input field before updating'
            }

            if (message != '') {
                warning('Required', `${message}`);
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/branch/edit',
                    data: {
                        branchid: branchid,
                        branchname: branchname,
                        tin: tin,
                        address: address,
                        logo: logo,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable();
                            $('#branchModal').modal('hide');
                            $('#branchnamemodal').val('');
                            $('#tinmodal').val('');
                            $('#addressmodal').val('');
                            success('Saved', 'Successfully')
                        }

                        if (result.msg == 'duplicate') {
                            warning('Duplicate', `${branchid} already exist!`);
                        }

                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        })

        function filterTableRows() {
            const searchQuery = $('#search-input').val().trim().toLowerCase();
            let foundMatches = false;

            $('#no-match-row').remove();

            $('#branch-dataTable tbody tr').each(function() {
                const rowData = $(this).text().toLowerCase();
                if (rowData.includes(searchQuery)) {
                    $(this).show();
                    foundMatches = true;
                } else {
                    $(this).hide();
                }
            });

            if (!foundMatches) {
                const noMatchRow = $('<tr>').append(
                    $('<td>', {
                        colspan: 9,
                        class: 'text-center',
                        text: 'No Data Matched'
                    })
                );
                $('#branch-dataTable tbody').append(noMatchRow);
                noMatchRow.attr('id', 'no-match-row');
            }
        }

        $('#search-input').on('input', filterTableRows);

    })
    
</script>