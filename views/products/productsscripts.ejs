<script>

$(document).ready(function () {
    let activeCategory = [];
    let base64String = "";
    let base64StringModal = "";
    let productid = "";
    let imagedescription = "";
    let status = "";

    LoadTable();
    
    $('#products-dataTable tbody').on('click', 'tr', function () {
        var dataRow = [];
        $(this).closest('tr').find('td').each(function () {
            dataRow.push($(this).text());
        });
        console.log(dataRow);
        productid = dataRow[0];
        imagedescription = dataRow[1];
        status = dataRow[7]
    }) 

    $(document).on('click', '#editBtn', function(){
        $('#productid').val(productid);
        $('#descriptionmodal').val(imagedescription);
        $('#productsModal').modal('show');
    })

    //#region Image Proccessing
    $(document).on("change", "#imageInputModal", function () {
        const input = document.getElementById("imageInputModal");
        const file = input.files[0];

        const reader = new FileReader();
        reader.onload = function () {
            const img = new Image();
            img.src = reader.result;
            img.onload = function () {
                const maxWidth = 300; 
                const maxHeight = 300; 

                let width = img.width;
                let height = img.height;

                if (width > maxWidth) {
                    height *= maxWidth / width;
                    width = maxWidth;
                }

                if (height > maxHeight) {
                    width *= maxHeight / height;
                    height = maxHeight;
                }

                const canvas = document.createElement("canvas");
                const ctx = canvas.getContext("2d");
                canvas.width = width;
                canvas.height = height;
                ctx.drawImage(img, 0, 0, width, height);

                const base64StringModal = canvas.toDataURL("image/jpeg"); // You can change the format if needed

                const preview = document.getElementById("productimagemodal");
                preview.src = base64StringModal;
                
                processedImage(base64StringModal);
            };
        };
        reader.readAsDataURL(file);
    });

    function processedImage() {
        const input = document.getElementById("imageInputModal");
        const file = input.files[0];

        var reader = new FileReader();
        console.log("next");

        reader.onload = function () {
        base64StringModal = reader.result.replace("data:", "").replace(/^.+,/, "");
        // alert(imageBase64Stringsep);
        console.log(base64StringModal);
        };
        reader.readAsDataURL(file);
    }

    $(document).on("change", "#imageInput", function () {
        const input = document.getElementById("imageInput");
        const file = input.files[0];

        const reader = new FileReader();
        reader.onload = function () {
            const img = new Image();
            img.src = reader.result;
            img.onload = function () {
                const maxWidth = 300; 
                const maxHeight = 300; 

                let width = img.width;
                let height = img.height;

                if (width > maxWidth) {
                    height *= maxWidth / width;
                    width = maxWidth;
                }

                if (height > maxHeight) {
                    width *= maxHeight / height;
                    height = maxHeight;
                }

                const canvas = document.createElement("canvas");
                const ctx = canvas.getContext("2d");
                canvas.width = width;
                canvas.height = height;
                ctx.drawImage(img, 0, 0, width, height);

                const resizedBase64 = canvas.toDataURL("image/jpeg"); // You can change the format if needed

                const preview = document.getElementById("productimage");
                preview.src = resizedBase64;
                
                imageUploaded(resizedBase64);
            };
        };
        reader.readAsDataURL(file);
    });

    function imageUploaded() {
        const input = document.getElementById("imageInput");
        const file = input.files[0];

        var reader = new FileReader();
        console.log("next");

        reader.onload = function () {
        base64String = reader.result.replace("data:", "").replace(/^.+,/, "");
        // alert(imageBase64Stringsep);
        console.log(base64String);
        };
        reader.readAsDataURL(file);
    }

    //#endregion processing image

    $(document).on('click', '#addBtn', function () {
        let description = $('#description').val();
        let price = $('#price').val();
        let category = $('#category').val();
        let barcode = $('#barcode').val();
        let productimage = base64String

        var message = "";

        if (description == '') { message += 'Description, ' }
        if (price == '') { message += 'Price, ' }
        if (category == '') { message += 'Category, ' }
        if (barcode == '') { message += 'Barcode, ' }

        if (message != '') {
            warning('Required', `Please fill up ${message}`);
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/products/save',
                data: {
                    price: price,
                    category: category,
                    barcode: barcode,
                    description: description,
                    productimage: productimage,
                },
                success: function (result) {
                    if (result.msg == 'success') {
                        LoadTable();
                        success('Saved', 'Successfully')
                        $('#productid').val('');
                        $('#description').val('');
                        $('#price').val('');
                        $('#barcode').val('');
                        $('#category').val('');
                        $('#imageInput').val('');
                    }

                    if (result.msg == 'exist') {
                        warning('Exist', `${productid} already exist!`);
                    }

                },
                error: function (err) {
                    errormsg(err);
                }
            })
        }
    })

    function populateProductsTable(data) {
        console.log(data);
        const tableBody = $('#products-dataTable tbody');
        tableBody.empty();

        if (data.length === 0) {
            const tr = $('<tr>').append($('<td>', {
                colspan: 9,
                class: 'text-center',
                text: 'No Data Matched'
            }));
            tableBody.append(tr);
        } else {
            data.forEach(item => {
                let action = '';
                if (item.status === 'ACTIVE') {
                    action = `
                        <button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                        <button id="inactiveBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="inactiveBtn">INACTIVE</button>`;
                } else if (item.status === 'INACTIVE') {
                    action = `
                        <button id="editBtn" class="btn btn-outline-inventory shadow-sm w-100" name="editBtn" data-toggle="modal" data-target="#accessModal">EDIT</button>
                        <button id="activeBtn" class="btn btn-outline-inventory shadow-sm w-100 mt-1" name="activeBtn">ACTIVE</button>`;
                }
                
                const numericValue = parseFloat(item.price.replace(/₱|,/g, ''));

                const tr = $('<tr>').append(
                    $('<td>', { text: item.productid, 'data-label': 'Product ID', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.description, 'data-label': 'Description', class: 'custom-mobile-align' }),
                    $('<td>', {
                        text: isNaN(numericValue) ? 'N/A' : formatCurrency(numericValue),
                        'data-label': 'Price',
                        class: 'custom-mobile-align'
                    }),
                    $('<td>', { text: item.barcode, 'data-label': 'Barcode', class: 'custom-mobile-align' }),
                    $('<td>', {
                        html: item.productimage
                            ? `<img src="data:image/png;base64,${item.productimage}" alt="Product Image" class="product-image" style="max-width: 200px; max-height: 150px;"/>`
                            : 'No Image',
                        'data-label': 'Product Image',
                    }),
                    $('<td>', { text: item.createdby, 'data-label': 'Created By', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.createddate, 'data-label': 'Created Date', class: 'custom-mobile-align' }),
                    $('<td>', { text: item.status, 'data-label': 'Status', class: 'custom-mobile-align' }),
                    $('<td>', { html: action, 'data-label': 'Action'})
                );

                tableBody.append(tr);
            });
        }
    }

    function formatCurrency(value) {
        var formattedValue = parseFloat(value).toFixed(2);
        return '₱' + formattedValue.replace(/\d(?=(\d{3})+\.)/g, '$&,');
    }

    function LoadTable() {
        $.ajax({
            url: '/products/load',
            method: 'GET',
            dataType: 'json',
            success: function(data) {
                if (data.msg === 'success') {
                    populateProductsTable(data.data);
                } else {
                    console.error(data.msg);
                }
            },
            error: function(error) {
                console.error(error);
            }
        });

    }

    function LoadList() {
        $.ajax({
            type: 'GET',
            url: '/category/load',
            success: function (result) {
                var data = result.data;

                $.each(data, function (key, item) {
                    if (item.status == "ACTIVE") {
                        activeCategory.push(item.categoryname); 
                    }
                });
                //console.log(activecategorys);
                populateCustomDropdown();
            },
            error: function (err) {
                errormsg(err);
            }
        });
    }

    $(document).on('click', '#activeBtn', function(){
        console.log(productid);
        console.log(status);
        $.ajax({
            type: 'POST',
            url: '/products/status',
            data: {
                status: status,
                productid: productid,
            },
            success: function (result) {
                if (result.msg == 'success') {
                    LoadTable();
                    success('Saved', 'Successfully')
                }

                if (result.msg == 'notexist') {
                    warning(`${productid} does not exist!`);
                }

            },
            error: function (err) {
                errormsg(err);
            }
        })
    });

    $(document).on('click', '#inactiveBtn', function(){
        console.log(productid);
        console.log(status);
        $.ajax({
            type: 'POST',
            url: '/products/status',
            data: {
                status: status,
                productid: productid,
            },
            success: function (result) {
                if (result.msg == 'success') {
                    LoadTable();
                    success('Saved', 'Successfully')
                }

                if (result.msg == 'notexist') {
                    warning(`${productid} does not exist!`);
                }

            },
            error: function (err) {
                errormsg(err);
            }
        })
    });

    $(document).on('click', '#updateBtn', function () {
            let productid = $('#productid').val();
            let description = $('#descriptionmodal').val();
            let productimage = base64StringModal;

            var message = "";

            if (description == '') { message += 'Description ' }

            if (message != '') {
                warning('Required', `Please fill up ${message}`);
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/products/edit',
                    data: {
                        productid: productid,
                        description: description,
                        productimage: productimage,
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable();
                            $('#productsModal').modal('hide');
                            $('#descriptionmodal').val('');
                            $('#imageInputModal').val('');
                            success('Saved', 'Successfully')
                        }

                        if (result.msg == 'duplicate') {
                            warning('Duplicate', `${description} already exist!`);
                        }

                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        })

    //#region

    function populateCustomDropdown() {
        for (const category of activeCategory) {
            addOption("categoryDropdown", category);
        }
    }

    function setupCustomDropdown(inputId, dropdownId, optionClass) {
        const inputElement = document.getElementById(inputId);
        const dropdownElement = document.getElementById(dropdownId);
        const options = dropdownElement.getElementsByClassName(optionClass);

        inputElement.addEventListener("click", function () {
            dropdownElement.style.display = "block";
        });

        for (const option of options) {
            option.addEventListener("click", function () {
                inputElement.value = option.textContent;
                dropdownElement.style.display = "none";
            });
        }

        inputElement.addEventListener("input", function () {
            const value = inputElement.value.toUpperCase();
            for (const option of options) {
                if (option.textContent.toUpperCase().includes(value)) {
                    option.style.display = "block";
                } else {
                    option.style.display = "none";
                }
            }
            dropdownElement.style.display = "block";
        });

        document.addEventListener("click", function (event) {
                const target = event.target;
                if (!dropdownElement.contains(target) && target !== inputElement) {
                    dropdownElement.style.display = "none";
                }
            });
    }

    function addOption(dropdownId, optionText) {
        const dropdownElement = document.getElementById(dropdownId);
        const newOption = document.createElement("div");
        newOption.className = "dropdown-option";
        newOption.textContent = optionText;

        newOption.addEventListener("click", function () {
            const inputElement = document.getElementById("category");
            inputElement.value = optionText;
            dropdownElement.style.display = "none";
        });
        
        dropdownElement.appendChild(newOption);
    }

    LoadList()

    setupCustomDropdown("category", "categoryDropdown", "dropdown-option");

    //#endregion

    }
)

</script>